class e{TEMPLATE_REGULAR=/\{\{(.*?)\}\}/;templateBlock="";constructor(e){this.templateBlock=e}generateTemplate(e){return e&&this.templateBlock?this.changeTemplateKeys(e,this.templateBlock,this.TEMPLATE_REGULAR):""}changeTemplateKeys(e,t,n){let r=n.exec(t);if(r&&r[1]){const n=r[1];for(let a in e)a==r[1]&&"string"==typeof e[n]&&(t=t.replace(r[0],e[n]))}return n.exec(t)?this.changeTemplateKeys(e,t,n):t}}const t='\n\t<div class="reg-form-page">\n\t\t<div class="reg-form-wrapper">\n\t\t\t<h2>{{title}}</h2>\n\t\t\t<form class="reg-form">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class="reg-form-fieldset"></div>\n\t\t\t\t\t<div class="form-block info-block">{{errorInfo}}</div>\n\t\t\t\t\t<div class="form-block buttons-wrapper"></div>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t</div>';class n{constructor(e){this.params=e}render(){return new e(t).generateTemplate(this.params)}insertBlock(n,r){const a=(new DOMParser).parseFromString(new e(t).generateTemplate(this.params),"text/html").getElementsByTagName("div")[0],l=document.querySelector(n);a&&l&&(r&&(l.innerHTML=""),l.appendChild(a))}}function r(){const e=document.querySelector(".reg-form");if(console.log(e),!e)return;const t=new FormData(e);console.log(...t)}const a=function(){return{email:new RegExp(/^([A-Za-z0-9_\.-]+)@([A-Za-z0-9_\.-]+)\.([a-z\.]{2,6})$/),login:new RegExp(/^[A-Za-z0-9_\.-]{3,20}$/),name:new RegExp(/^[A-ZА-Я][a-zA-Zа-яА-Я-]+$/),phone:new RegExp(/^\+?\d{10,15}$/),password:new RegExp(/^((?=.*?[A-Z])(?=.*?[0-9])\S{8,40})\S$/)}},l='\n\t<div class="form-block">\n\t\t<label class="form-label" for="{{id}}">{{label}}</label>\n\t\t<div class="input-wrapper">\n\t\t\t<input class="form-control input-styles" data-error-text="{{errorText}}" data-validation-type="{{validationType}}" id="{{id}}" type="{{type}}" value="{{value}}" name="{{name}}">\n\t\t\t<div class="error-text-block"></div>\n\t\t</div>\n\t</div>';class s{constructor(e){this.params=e}render(){return new e(l).generateTemplate(this.params)}insertBlock(t){const n=(new DOMParser).parseFromString(new e(l).generateTemplate(this.params),"text/html").getElementsByTagName("div")[0],r=document.querySelector(t);if(!n||!r)return;let s=n.querySelector("input");s.addEventListener("focus",(function(){s.classList.add("focus-input")})),s.addEventListener("blur",(function(){s.classList.remove("focus-input"),console.log(function(e){const t=e.getAttribute("data-validation-type"),n=e.getAttribute("data-error-text"),r=e.value,l=a[t],s=e.parentElement,o=s.querySelector(".error-text-block");return l&&!l.test(r)?(s.classList.add("error-input"),o&&(o.textContent=n||"Возникла ошибка при заполнении формы. Пожалуйста, проверьте введённые данные."),!1):(s.classList.remove("error-input"),o&&(o.textContent=""),!0)}(s))})),r.appendChild(n)}}class o{constructor(e){this.params=e}render(){return new e('<button class="button-link {{classes}}">{{name}}</button>').generateTemplate(this.params)}insertBlock(t){const n=(new DOMParser).parseFromString(new e('<button class="button-link {{classes}}">{{name}}</button>').generateTemplate(this.params),"text/html").getElementsByTagName("button")[0],r=document.querySelector(t);n&&r&&(n.addEventListener("click",this.params.onClick),r.appendChild(n))}}const i={title:"Регистрация",errorInfo:""},c=[{element:".reg-form-fieldset",id:"email",name:"email",label:"E-mail",value:"",type:"text",errorText:"Неверный формат email",validationType:"email"},{element:".reg-form-fieldset",id:"login",name:"login",label:"Логин",value:"",type:"text",errorText:"Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов",validationType:"login"},{element:".reg-form-fieldset",id:"password",name:"password",label:"Пароль",value:"",type:"password",errorText:"Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру",validationType:"password"},{element:".reg-form-fieldset",id:"repeatPassword",name:"repeat_password",label:"Повторите пароль",value:"",type:"password",errorText:"Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру",validationType:"password"}],p=[{element:".buttons-wrapper",id:"",name:"Зарегистрироваться",classes:"add-link",onClick:e=>{e.preventDefault(),r()}},{element:".buttons-wrapper",id:"",name:"Назад",classes:"reg-link",onClick:e=>{e.preventDefault(),f()}}];const d={title:"Вход",errorInfo:""},m=[{element:".reg-form-fieldset",id:"login",name:"login",label:"Логин",value:"",type:"text",errorText:"",validationType:""},{element:".reg-form-fieldset",id:"password",name:"password",label:"Пароль",value:"",type:"password",errorText:"",validationType:""}],u=[{element:".buttons-wrapper",id:"",name:"Авторизоваться",classes:"add-link",onClick:e=>{e.preventDefault(),r()}},{element:".buttons-wrapper",id:"",name:"Зарегистрироваться",classes:"reg-link",onClick:e=>{e.preventDefault(),new n(i).insertBlock("#app",!0),c.forEach((function(e){new s(e).insertBlock(e.element)})),p.forEach((function(e){new o(e).insertBlock(e.element)}))}}];function f(){new n(d).insertBlock("#app",!0),m.forEach((function(e){new s(e).insertBlock(e.element)})),u.forEach((function(e){new o(e).insertBlock(e.element)}))}document.addEventListener("DOMContentLoaded",(function(){f()}));
//# sourceMappingURL=index.1539c2b9.js.map
