{"mappings":"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","sources":["src/utilities/TemplateGen.ts","src/elements/block.ts","src/utilities/validation.ts","src/elements/form-block.ts","src/elements/input-block.ts","src/elements/button-block.ts","src/elements/link-block.ts","src/elements/chat-wrapper.ts","src/elements/chat-block.ts","src/elements/message-block.ts","src/elements/error-block.ts","src/pages/error.ts","src/elements/image-input-block.ts","src/pages/profile.ts","src/pages/chat.ts","src/pages/registration.ts","src/pages/authorization.ts","src/main.ts"],"sourcesContent":["//Генератор шаблонов\r\n//На вход подаётся строка с макросами в скобках {{}} и объект со значениями макросов\r\n//Пример:\r\n/*\r\n\tСтрока: '<div class=\"{{className}}\"></div>'\r\n\tОбъект: {className: 'test-class'}\r\n*/\r\n\r\nexport default class TemplateGen {\r\n\r\n\treadonly TEMPLATE_REGULAR = /\\{\\{(.*?)\\}\\}/;\r\n\r\n\treadonly templateBlock: string = \"\";\r\n\r\n\tconstructor(templateBlock: string) {\r\n\t\tthis.templateBlock = templateBlock\r\n\t}\r\n\r\n\tgenerateTemplate(template: Record<string, unknown>): string {\r\n\t\tif (template && this.templateBlock){\r\n\t\t\treturn this.changeTemplateKeys(template, this.templateBlock, this.TEMPLATE_REGULAR);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tchangeTemplateKeys(template, tmp, templateRegular): string {\r\n\t\tlet templateKeys = templateRegular.exec(tmp);\r\n\t\tif (templateKeys && templateKeys[1]){\r\n\t\t\tconst templateKey = templateKeys[1];\r\n\t\t\tfor (let key in template) {\r\n\t\t\t\tif (key == templateKeys[1]){\r\n\t\t\t\t\tlet templateValue = template[templateKey];\r\n\t\t\t\t\tif ((typeof templateValue != \"object\") && (typeof templateValue != \"function\")){\r\n\t\t\t\t\t\ttemplateValue = templateValue.toString()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttemplateValue = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttmp = tmp.replace(templateKeys[0], templateValue);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\tif (templateRegular.exec(tmp)){\r\n\t\t\treturn this.changeTemplateKeys(template, tmp, templateRegular);\r\n\t\t} else {\r\n\t\t\treturn tmp;\r\n\t\t}\r\n\t}\r\n}","//Блоки - общее\r\nimport TemplateGen from '../utilities/TemplateGen';\r\n\r\nexport default class Block {\r\n\tparams: Record<string, unknown>\r\n\ttemplate: string\r\n\tinsertedBlock: Record<string, unknown>\r\n\r\n\tconstructor(params: Record<string, unknown>, template: string) {\r\n\t\tthis.params = params;\r\n\t\tthis.template = template;\r\n\t}\r\n\r\n\trender(): string {\r\n\t\treturn new TemplateGen(this.template).generateTemplate(this.params);;\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tconst inner = new DOMParser().parseFromString(new TemplateGen(this.template).generateTemplate(this.params), \"text/html\").getElementsByTagName(\"body\")[0].childNodes[0]; //this.element;\r\n\t\tconst wrapper = document.querySelector(element);\r\n\t\tconsole.log(inner)\r\n\t\tconsole.log(wrapper)\r\n\t\tif (!inner || !wrapper) return {};\r\n\t\tfor (let key in this.params){\r\n\t\t\tif (!this.params[key]){\r\n\t\t\t\tinner.removeAttribute(key);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (clean){\r\n\t\t\twrapper.innerHTML = \"\";\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tinner: inner,\r\n\t\t\twrapper: wrapper\r\n\t\t}\r\n\t}\r\n}","//Валидация\r\n\r\nconst defaultValidationErrorMessage = \"Возникла ошибка при заполнении формы. Пожалуйста, проверьте введённые данные.\";\r\nconst repeatPasswordErrorMessage = \"Пароли не совпадают.\";\r\nconst requiredFieldsErrorMessage = \"Не все обязательные поля заполнены.\";\r\n\r\nconst validationRegex: Record<string, RegExp> = {\r\n\temail: new RegExp(/^([A-Za-z0-9_\\.-]+)@([A-Za-z0-9_\\.-]+)\\.([a-z\\.]{2,6})$/),\r\n\tlogin: new RegExp(/^[A-Za-z0-9_\\.-]{3,20}$/),\r\n\tname: new RegExp(/^[A-ZА-Я][a-zA-Zа-яА-Я-]+$/),\r\n\tphone: new RegExp(/^\\+?\\d{10,15}$/),\r\n\tpassword: new RegExp(/^((?=.*?[A-Z])(?=.*?[0-9])\\S{8,40})\\S$/),\r\n};\r\n\r\nexport const validValue = function(input: HTMLInputElement): boolean {\r\n\tconst validationType = input.getAttribute(\"data-validation-type\");\r\n\tconst errorText = input.getAttribute(\"data-error-text\");\r\n\r\n\tconst value = input.value;\r\n\tconst regex = validationRegex[validationType];\r\n\r\n\tconst inputWrapper = input.parentElement;\r\n\tconst errorBlock = inputWrapper.querySelector(\".error-text-block\");\r\n\r\n\tif (regex && !regex.test(value)) {\r\n\t\tinputWrapper.classList.add('error-input');\r\n\t\tif (errorBlock){\r\n\t\t\tif (errorText){\r\n\t\t\t\terrorBlock.textContent = errorText;\r\n\t\t\t} else {\r\n\t\t\t\terrorBlock.textContent = defaultValidationErrorMessage;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\treturn false;\r\n\t}\r\n\tinputWrapper.classList.remove('error-input');\r\n\tif (errorBlock){\r\n\t\terrorBlock.textContent = \"\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport const validForm = function(form: HTMLFormElement): boolean {\r\n\tconst formBlocks = form.querySelectorAll('.form-block');\r\n\tconst infoBlock = form.querySelector(\".info-block\");\r\n\r\n\tlet isFormValid = true;\r\n\tlet password = \"\", repeatPassword = \"\";\r\n\r\n\tinfoBlock.textContent = \"\";\r\n\r\n\tformBlocks.forEach(function(formBlock) {\r\n\t\tlet input = formBlock.querySelector(\"input\");\r\n\t\tif (input){\r\n\t\t\tif (!formBlock.classList.contains(\"none-block\") && !validValue(input)) {\r\n\t\t\t\tisFormValid = false;\r\n\t\t\t}\r\n\t\t\tif (!input.value && input.getAttribute(\"data-required\") && !formBlock.classList.contains(\"none-block\")){\r\n\t\t\t\tisFormValid = false;\r\n\t\t\t\tinfoBlock.textContent = requiredFieldsErrorMessage;\r\n\t\t\t}\r\n\t\t\tif (input.name == \"password\"){\r\n\t\t\t\tpassword = input.value;\r\n\t\t\t}\r\n\t\t\tif (input.name == \"repeat_password\"){\r\n\t\t\t\trepeatPassword = input.value;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\tif (password && repeatPassword && (password != repeatPassword)){\r\n\t\tisFormValid = false;\r\n\t\tinfoBlock.textContent = repeatPasswordErrorMessage;\r\n\t}\t\r\n\treturn isFormValid;\r\n}","//Блок input\r\n\r\nimport Block from '../elements/block';\r\nimport {validForm} from \"../utilities/validation\";\r\n\r\nconst formBlockTemplate = `\r\n\t<div class=\"reg-form-page\">\r\n\t\t<div class=\"reg-form-wrapper\">\r\n\t\t\t<h2>{{title}}</h2>\r\n\t\t\t<form class=\"reg-form\">\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<div class=\"reg-form-fieldset\"></div>\r\n\t\t\t\t\t<div class=\"form-block info-block\"></div>\r\n\t\t\t\t\t<div class=\"form-block buttons-wrapper\"></div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type FormParams = {\r\n\ttitle: string\r\n};\r\n\r\nexport default class Form extends Block {\r\n\r\n\tconstructor(params: FormParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = formBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}\r\n\r\nexport function onSubmitForm(callback): void {\r\n\tconst form: HTMLFormElement  = document.querySelector('.reg-form');\r\n\tif (!form) return\r\n\r\n\tif (validForm(form)){\r\n\t\tconst data: FormData = new FormData(form);\r\n\t\tconsole.log(...data);\r\n\t\tif (callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\treturn;\r\n}","//Блок input\r\n\r\nimport Block from '../elements/block';\r\nimport {validValue} from \"../utilities/validation\";\r\n\r\nconst inputBlockTemplate = `\r\n\t<div class=\"form-block {{classList}}\">\r\n\t\t<label class=\"form-label\" for=\"{{id}}\">{{label}}</label>\r\n\t\t<div class=\"input-wrapper\">\r\n\t\t\t<input class=\"form-control input-styles\" data-required=\"{{required}}\" data-error-text=\"{{errorText}}\" data-validation-type=\"{{validationType}}\" id=\"{{id}}\" type=\"{{type}}\" value=\"{{value}}\" name=\"{{name}}\">\r\n\t\t\t<div class=\"error-text-block\"></div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type InputParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tlabel: string,\r\n\tvalue: string,\r\n\ttype: string,\r\n\tname: string,\r\n\trequired: boolean,\r\n\terrorText: string,\r\n\tvalidationType: string,\r\n\tclassList: string,\r\n}\r\n\r\nexport default class Input extends Block {\r\n\t//params: InputParams\r\n\r\n\tconstructor(params: InputParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = inputBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\r\n\t\t\tlet input = inner.querySelector('input')\r\n\t\t\tinput.addEventListener('focus', function(){\r\n\t\t\t\tinput.classList.add('focus-input');\r\n\t\t\t});\r\n\t\t\tinput.addEventListener('blur', function(){\r\n\t\t\t\tinput.classList.remove('focus-input');\r\n\t\t\t\tvalidValue(input);\r\n\t\t\t});\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок кнопки\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst buttonBlockTemplate = `<button id=\"{{id}}\" class=\"button-link {{classes}}\">{{name}}</button>`;\r\n\r\nexport type ButtonParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tclasses: string,\r\n\tname: string,\r\n\tonClick: (event: Event) => void\r\n}\r\n\r\nexport default class Button extends Block {\r\n\r\n\tconstructor(params: ButtonParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = buttonBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\tinner.addEventListener('click', this.params.onClick);\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\tconsole.log(insertedBlock)\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок ссылки\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst linkBlockTemplate = `<a id=\"{{id}}\" class=\"{{classes}}\" href=\"{{href}}\">{{name}}</a>`;\r\n\r\nexport type LinkParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tclasses: string,\r\n\tname: string,\r\n\thref: string,\r\n\tonClick: (event: Event) => void\r\n}\r\n\r\nexport default class Link extends Block {\r\n\r\n\tconstructor(params: LinkParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = linkBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\tinner.addEventListener('click', this.params.onClick);\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок чата (общий)\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst chatWrapperTemplate = `\r\n\t<div class=\"chat-form-page clear\">\r\n\t\t<div class=\"chat-list-column\">\r\n\t\t\t<div class=\"profile-block clear\"></div>\r\n\t\t\t<div class=\"chat-list\"></div>\r\n\t\t</div>\r\n\t\t<div class=\"chat-full-block\">\r\n\t\t\t<div class=\"chat-full-name\">{{chatUserName}}</div>\r\n\t\t\t<!--<div class=\"select-chat-wrapper \">\r\n\t\t\t\t<div class=\"select-chat-cell\">\r\n\t\t\t\t\t<span>Выберите чат</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>-->\r\n\t\t\t<div class=\"chat-wrapper\"></div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type ChatParams = {\r\n\tchatUserName: string\r\n};\r\n\r\nexport default class Chat extends Block {\r\n\r\n\tconstructor(params: ChatParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = chatWrapperTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок чата (пользователь)\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst chatBlockTemplate = `\r\n\t<div class=\"chat-block\" id=\"{{id}}\">\r\n\t\t<div class=\"chat-photo-wrapper\">\r\n\t\t\t<img class=\"chat-photo\" src=\"{{photoLink}}\" alt=\"{{photoAlt}}\">\r\n\t\t</div>\r\n\t\t<div class=\"chat-name\">{{name}}</div>\r\n\t\t<div class=\"chat-preview-text\">\r\n\t\t\t<strong class=\"{{fromMeHideClass}}\">Вы: </strong>\r\n\t\t\t<span>{{text}}</span>\r\n\t\t</div>\r\n\t\t<div class=\"chat-time\">{{time}}</div>\r\n\t\t<div class=\"new-messages-info {{newMessageHideClass}}\">{{newMessageCount}}</div>\r\n\t\t<a class=\"delete-chat-button\" href=\"#\">X</a>\r\n\t</div>`;\r\n\r\nexport type ChatBlockParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tphotoLink: string,\r\n\tphotoAlt: string,\r\n\tname: string,\r\n\tfromMeHideClass: string,\r\n\ttext: string,\r\n\ttime: string,\r\n\tnewMessageHideClass: string,\r\n\tnewMessageCount: number,\r\n\tonClick: (event: Event) => void\r\n};\r\n\r\nexport default class ChatBlock extends Block {\r\n\r\n\tconstructor(params: ChatBlockParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = chatBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\tinner.addEventListener('click', this.params.onClick);\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок сообщения\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst messageBlockTemplate = `\r\n\t<div class=\"chat-message-wrapper {{toMeClass}}\">\r\n\t\t<div class=\"chat-message-block\">\r\n\t\t\t<div class=\"chat-message-time\">{{time}}</div>\r\n\t\t\t<div>\r\n\t\t\t\t{{text}}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type MessageBlockParams = {\r\n\telement: string,\r\n\ttoMeClass: string, //message-to-me\r\n\ttext: string,\r\n\ttime: string,\r\n};\r\n\r\nexport default class MessageBlock extends Block {\r\n\r\n\tconstructor(params: MessageBlockParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = messageBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\twrapper.prepend(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок ошибки\r\n\r\nimport Block from '../elements/block';\r\n\r\n//<a class=\"warning-add warning-button\" href=\"chat.html\">Назад</a>-\r\n\r\nconst errorBlockTemplate = `\r\n\t<div class=\"warning-message-wrapper warning-on\">\r\n\t\t<div class=\"warning-message-table\">\r\n\t\t\t<div class=\"warning-message-block\">\r\n\t\t\t\t<div class=\"loader none-block\">//убрать none-block для показа</div>\r\n\t\t\t\t<div class=\"error-message warning-message\">\r\n\t\t\t\t\t<div class=\"error-message-header\">{{title}}</div>\r\n\t\t\t\t\t<span>{{errorText}}</span>\r\n\t\t\t\t\t<div class=\"warning-buttons-wrapper\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type ErrorParams = {\r\n\ttitle: string,\r\n\terrorText: string\r\n};\r\n\r\nexport default class Error extends Block {\r\n\r\n\tconstructor(params: ErrorParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = errorBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Страница ошибки\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport Error, { ErrorParams }  from '../elements/error-block';\r\nimport authorization from './authorization';\r\n\r\n//import profile from './profile';\r\n\r\nconst errorBlock: ErrorParams = {\r\n\ttitle: 'Ошибка 404',\r\n\terrorText: 'Страница не найдена'\r\n};\r\n\r\nconst errorButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.warning-buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'warning-add warning-button',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tauthorization(); //Пока на страницу авторизации\r\n\t\t},\r\n\t},\r\n];\r\n\r\nexport default function(): void {\r\n\r\n\tnew Error(errorBlock).insertBlock(\"#app\", true);\r\n\r\n\terrorButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Блок загрузки изображения\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst inputImageTemplate = `\r\n\t<label class=\"image-form-block\" for=\"{{id}}\">\r\n\t\t<input class=\"load-image\" hidden accept=\"image/*\" type=\"file\" id=\"{{id}}\">\r\n\t\t<img id=\"{{id}}\" src=\"{{imageLink}}\" alt=\"{{imageAlt}}\" title=\"{{imageTitle}}\">\r\n\t</label>`;\r\n\r\nexport type InputImageParams = {\r\n\telement: string,\r\n\tid: string,\r\n\timageLink: string,\r\n\timageAlt: string,\r\n\timageTitle: string,\r\n}\r\n\r\nexport default class ImageInput extends Block {\r\n\r\n\tconstructor(params: InputImageParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = inputImageTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Страница профиля\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport ImageInput, { InputImageParams }  from '../elements/image-input-block';\r\nimport authorization from './authorization';\r\nimport chat from './chat';\r\n\r\nconst profileForm: FormParams = {\r\n\ttitle: ''\r\n};\r\n\r\nconst profileImageInputs: InputImageParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'photoImageUpload',\r\n\t\timageLink: '#',\r\n\t\timageAlt: '',\r\n\t\timageTitle: '',\r\n\t}\r\n];\r\n\r\nconst profileInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'email',\r\n\t\tname: 'email',\r\n\t\tlabel: 'E-mail',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Неверный формат email',\r\n\t\tvalidationType: 'email',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов',\r\n\t\tvalidationType: 'login',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'secondName',\r\n\t\tname: 'second_name',\r\n\t\tlabel: 'Фамилия',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'firstName',\r\n\t\tname: 'first_name',\r\n\t\tlabel: 'Имя',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'phone',\r\n\t\tname: 'phone',\r\n\t\tlabel: 'Телефон',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Телефон должен содержать от 10 до 15 символов, состоит из цифр, может начинаться с плюса',\r\n\t\tvalidationType: 'phone',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst changePasswordButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'changePasswordButton',\r\n\t\tname: 'Изменить пароль',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconst changePasswordButton = document.getElementById(event.target.getAttribute('id'));\r\n\t\t\tlet showElement = changePasswordButton.nextElementSibling;\r\n\r\n\t\t\twhile (showElement){\r\n\t\t\t\tshowElement.classList.remove(\"none-block\");\r\n\t\t\t\tshowElement = showElement.nextElementSibling;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst changePasswordInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'oldPassword',\r\n\t\tname: 'old_password',\r\n\t\tlabel: 'Старый пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'repeatPassword',\r\n\t\tname: 'repeat_password',\r\n\t\tlabel: 'Повторите пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n];\r\n\r\nconst profileButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Изменить данные',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm(function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tchat();\r\n\t\t},\r\n\t},\r\n]\r\n\r\nexport default function(): void {\r\n\r\n\tnew Form(profileForm).insertBlock(\"#app\", true);\r\n\r\n\tprofileImageInputs.forEach(function(imageInput) {\r\n\t\tnew ImageInput(imageInput).insertBlock(imageInput.element);\r\n\t});\r\n\r\n\tprofileInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tchangePasswordButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n\r\n\tchangePasswordInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tprofileButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Страница чата\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport Link, { LinkParams }  from '../elements/link-block';\r\nimport Chat, { ChatParams }  from '../elements/chat-wrapper';\r\nimport ChatBlock, { ChatBlockParams }  from '../elements/chat-block';\r\nimport MessageBlock, { MessageBlockParams }  from '../elements/message-block';\r\nimport registration from './registration';\r\nimport authorization from './authorization';\r\nimport error from './error';\r\nimport profile from './profile';\r\n\r\nconst chatParams: ChatParams = {\r\n\tchatUserName: 'Андрей Андрейченков',\r\n}\r\n\r\nconst sendForm: FormParams = {\r\n\ttitle: ''\r\n};\r\n\r\nconst sendButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.chat-send-box',\r\n\t\tid: '',\r\n\t\tname: '📎',\r\n\t\tclasses: 'add-file-button',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\t\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.chat-send-box',\r\n\t\tid: '',\r\n\t\tname: ' >',\r\n\t\tclasses: 'chat-send-button',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm(function(){\r\n\t\t\t\t//chat();\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n]\r\n\r\nconst chatProfileLinks: LinkParams[] = [\r\n\t{\r\n\t\telement: '.profile-block',\r\n\t\tid: '',\r\n\t\tclasses: 'create-chat-link',\r\n\t\tname: 'Создать чат',\r\n\t\thref: '#',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\terror();\t\t\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.profile-block',\r\n\t\tid: '',\r\n\t\tclasses: 'profile-link',\r\n\t\tname: 'Мой профиль &gt;',\r\n\t\thref: '#',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tprofile();\t\t\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.chat-full-name',\r\n\t\tid: '',\r\n\t\tclasses: 'chat-back-button',\r\n\t\tname: 'Выход',\r\n\t\thref: '#',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tauthorization();\t\t\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst chatList: ChatBlockParams[] = [\r\n\t{\r\n\t\telement: '.chat-list',\r\n\t\tid: '1',\r\n\t\tphotoLink: '',\r\n\t\tname: 'Андрей Андрейченков',\r\n\t\tphotoAlt: '',\r\n\t\tfromMeHideClass: 'none-block',\r\n\t\ttext: 'Круто!',\r\n\t\ttime: '15.04.2022 15:31',\r\n\t\tnewMessageHideClass: '',\r\n\t\tnewMessageCount: 10,\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonChatClick(event);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.chat-list',\r\n\t\tid: '2',\r\n\t\tphotoLink: '',\r\n\t\tname: 'Михалыч',\r\n\t\tphotoAlt: '',\r\n\t\tfromMeHideClass: '',\r\n\t\ttext: 'Отлично!',\r\n\t\ttime: '15.04.2022 15:31',\r\n\t\tnewMessageHideClass: 'none-block',\r\n\t\tnewMessageCount: 0,\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonChatClick(event);\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst messageList: MessageBlockParams[] = [\r\n\t{\r\n\t\telement: '.chat-wrapper',\r\n\t\ttoMeClass: 'message-to-me',\r\n\t\ttext: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur  Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n\t\ttime: '15.04.2022 12:37',\r\n\t},\r\n\t{\r\n\t\telement: '.chat-wrapper',\r\n\t\ttoMeClass: 'message-to-me',\r\n\t\ttext: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur  Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n\t\ttime: '15.04.2022 12:37',\r\n\t},\r\n\t{\r\n\t\telement: '.chat-wrapper',\r\n\t\ttoMeClass: '',\r\n\t\ttext: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur  Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n\t\ttime: '15.04.2022 12:37',\r\n\t},\r\n];\r\n\r\nfunction onChatClick(event){\r\n\tif (event.target.classList.contains(\"delete-chat-button\")){\r\n\t\tconsole.log(\"удаление\")\r\n\t} else {\r\n\t\tconsole.log(\"открытие чата\")\r\n\t}\r\n}\r\n\r\nexport default function(): void {\r\n\r\n\tnew Chat(chatParams).insertBlock(\"#app\", true);\r\n\r\n\tchatProfileLinks.forEach(function(link) {\r\n\t\tnew Link(link, '').insertBlock(link.element);\r\n\t});\r\n\r\n\tchatList.forEach(function(chat){\r\n\t\tnew ChatBlock(chat, '').insertBlock(chat.element);\r\n\t});\r\n\r\n\tmessageList.forEach(function(message){\r\n\t\tnew MessageBlock(message, '').insertBlock(message.element);\r\n\t});\r\n\r\n\tnew Form(sendForm, '<form class\"chat-send-box\"></form>').insertBlock(\".chat-full-block\");\r\n\tsendButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Страница регистрации\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport authorization from './authorization';\r\nimport chat from './chat';\r\n\r\nconst registrationForm: FormParams = {\r\n\ttitle: 'Регистрация'\r\n}\r\n\r\nconst registrationInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'email',\r\n\t\tname: 'email',\r\n\t\tlabel: 'E-mail',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Неверный формат email',\r\n\t\tvalidationType: 'email',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов',\r\n\t\tvalidationType: 'login',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'secondName',\r\n\t\tname: 'second_name',\r\n\t\tlabel: 'Фамилия',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'firstName',\r\n\t\tname: 'first_name',\r\n\t\tlabel: 'Имя',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'phone',\r\n\t\tname: 'phone',\r\n\t\tlabel: 'Телефон',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Телефон должен содержать от 10 до 15 символов, состоит из цифр, может начинаться с плюса',\r\n\t\tvalidationType: 'phone',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'repeatPassword',\r\n\t\tname: 'repeat_password',\r\n\t\tlabel: 'Повторите пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst registrationButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Зарегистрироваться',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm(function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tauthorization();\r\n\t\t},\r\n\t},\r\n]\r\n\r\nexport default function(): void {\r\n\r\n\tnew Form(registrationForm).insertBlock(\"#app\", true);\r\n\r\n\tregistrationInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tregistrationButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Страница авторизации\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport registration from './registration';\r\nimport chat from './chat';\r\n\r\nconst authorizationForm: FormParams = {\r\n\ttitle: 'Вход',\r\n}\r\n\r\nconst authorizationInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: '',\r\n\t\tvalidationType: '',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: '',\r\n\t\tvalidationType: '',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst authorizationButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Авторизоваться',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm(function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\t\t\t\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Зарегистрироваться',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tregistration();\r\n\t\t\t//profile();\r\n\t\t},\r\n\t},\r\n]\r\n\r\nexport default function(): void {\r\n\r\n\tnew Form(authorizationForm).insertBlock(\"#app\", true);\r\n\r\n\tauthorizationInputs.forEach(function(input) {\r\n\t\tnew Input(input, '').insertBlock(input.element);\r\n\t});\r\n\r\n\tauthorizationButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","import './scss/init.scss';\r\nimport authorization from './pages/authorization';\r\nimport error from './pages/error';\r\n\r\nfunction ready() {\r\n\tauthorization();\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);"],"names":["$973bede13e903614$export$2e2bcd8739ae039","TEMPLATE_REGULAR","templateBlock","constructor","this","generateTemplate","template","changeTemplateKeys","tmp","templateRegular","templateKeys","exec","templateKey","key","templateValue","toString","replace","$f7247865aae568d1$export$2e2bcd8739ae039","params","render","insertBlock","element","clean","inner","DOMParser","parseFromString","getElementsByTagName","childNodes","wrapper","document","querySelector","console","log","removeAttribute","innerHTML","$ee188ca8cb13b1d3$var$validationRegex","email","RegExp","login","name","phone","password","$ee188ca8cb13b1d3$export$5ca26c99531348ec","input","validationType","getAttribute","errorText","value","regex","inputWrapper","parentElement","errorBlock","test","classList","add","textContent","remove","$ae202c0a4cbfb8e0$export$2e2bcd8739ae039","super","insertedBlock","appendChild","form","formBlocks","querySelectorAll","infoBlock","isFormValid","repeatPassword","forEach","formBlock","contains","addEventListener","$7754adb433268645$export$2e2bcd8739ae039","onClick","$7d05fecee680a978$export$2e2bcd8739ae039","$294a01c843a7bfcc$export$2e2bcd8739ae039","$c2020b7a41de0eca$var$errorBlock","title","$c2020b7a41de0eca$var$errorButtons","id","classes","event","preventDefault","$91695f1c427861cf$export$2e2bcd8739ae039","$87a085c262289cfb$export$2e2bcd8739ae039","$7e7fecefb4a4129d$var$profileForm","$7e7fecefb4a4129d$var$profileImageInputs","imageLink","imageAlt","imageTitle","$7e7fecefb4a4129d$var$profileInputs","label","type","required","$7e7fecefb4a4129d$var$changePasswordButtons","showElement","getElementById","target","nextElementSibling","$7e7fecefb4a4129d$var$changePasswordInputs","$7e7fecefb4a4129d$var$profileButtons","$ae202c0a4cbfb8e0$export$163d82ae5407ed7c","$a5326e997c37e9f7$export$2e2bcd8739ae039","$a5326e997c37e9f7$var$chatParams","chatUserName","$a5326e997c37e9f7$var$sendForm","$a5326e997c37e9f7$var$sendButtons","$a5326e997c37e9f7$var$chatProfileLinks","href","button","imageInput","$002a4a3e1848043a$export$2e2bcd8739ae039","$a5326e997c37e9f7$var$chatList","photoLink","photoAlt","fromMeHideClass","text","time","newMessageHideClass","newMessageCount","$a5326e997c37e9f7$var$onChatClick","$a5326e997c37e9f7$var$messageList","toMeClass","$2bc99bc52c546f23$export$2e2bcd8739ae039","link","chat","$367df50f684bc0f4$export$2e2bcd8739ae039","message","$52e53354ad87dc80$export$2e2bcd8739ae039","$e7d9c4fff4870b96$var$registrationForm","$e7d9c4fff4870b96$var$registrationInputs","$e7d9c4fff4870b96$var$registrationButtons","$91695f1c427861cf$var$authorizationForm","$91695f1c427861cf$var$authorizationInputs","$91695f1c427861cf$var$authorizationButtons"],"version":3,"file":"index.700bdae0.js.map","sourceRoot":"../"}