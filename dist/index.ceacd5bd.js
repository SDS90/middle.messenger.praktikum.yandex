(()=>{class e{TEMPLATE_REGULAR=/\{\{(.*?)\}\}/;templateBlock="";constructor(e){this.templateBlock=e}generateTemplate(e){return e&&this.templateBlock?this.changeTemplateKeys(e,this.templateBlock,this.TEMPLATE_REGULAR):""}changeTemplateKeys(e,t,n){let r=n.exec(t);if(r&&r[1]){const n=r[1];for(let a in e)if(a==r[1]){let a=e[n];a="object"!=typeof a&&"function"!=typeof a?a.toString():"",t=t.replace(r[0],a)}}return n.exec(t)?this.changeTemplateKeys(e,t,n):t}}const t='<button id="{{id}}" class="button-link {{classes}}">{{name}}</button>';class n{constructor(e){this.params=e}render(){return new e(t).generateTemplate(this.params)}insertBlock(n,r){const a=(new DOMParser).parseFromString(new e(t).generateTemplate(this.params),"text/html").getElementsByTagName("button")[0],s=document.querySelector(n);if(a&&s){for(let e in this.params)this.params[e]||a.removeAttribute(e);r&&(s.innerHTML=""),a.addEventListener("click",this.params.onClick),s.appendChild(a)}}}const r='\n\t<div class="warning-message-wrapper warning-on">\n\t\t<div class="warning-message-table">\n\t\t\t<div class="warning-message-block">\n\t\t\t\t<div class="loader none-block">//убрать none-block для показа</div>\n\t\t\t\t<div class="error-message warning-message">\n\t\t\t\t\t<div class="error-message-header">{{title}}</div>\n\t\t\t\t\t<span>{{errorText}}</span>\n\t\t\t\t\t<div class="warning-buttons-wrapper">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>';class a{constructor(e){this.params=e}render(){return new e(r).generateTemplate(this.params)}insertBlock(t,n){const a=(new DOMParser).parseFromString(new e(r).generateTemplate(this.params),"text/html").getElementsByTagName("div")[0],s=document.querySelector(t);if(a&&s){for(let e in this.params)this.params[e]||a.removeAttribute(e);n&&(s.innerHTML=""),s.appendChild(a)}}}const s={email:new RegExp(/^([A-Za-z0-9_\.-]+)@([A-Za-z0-9_\.-]+)\.([a-z\.]{2,6})$/),login:new RegExp(/^[A-Za-z0-9_\.-]{3,20}$/),name:new RegExp(/^[A-ZА-Я][a-zA-Zа-яА-Я-]+$/),phone:new RegExp(/^\+?\d{10,15}$/),password:new RegExp(/^((?=.*?[A-Z])(?=.*?[0-9])\S{8,40})\S$/)},i=function(e){const t=e.getAttribute("data-validation-type"),n=e.getAttribute("data-error-text"),r=e.value,a=s[t],i=e.parentElement,l=i.querySelector(".error-text-block");return a&&!a.test(r)?(i.classList.add("error-input"),l&&(l.textContent=n||"Возникла ошибка при заполнении формы. Пожалуйста, проверьте введённые данные."),!1):(i.classList.remove("error-input"),l&&(l.textContent=""),!0)},l='\n\t<div class="reg-form-page">\n\t\t<div class="reg-form-wrapper">\n\t\t\t<h2>{{title}}</h2>\n\t\t\t<form class="reg-form">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class="reg-form-fieldset"></div>\n\t\t\t\t\t<div class="form-block info-block"></div>\n\t\t\t\t\t<div class="form-block buttons-wrapper"></div>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t</div>';class o{constructor(e){this.params=e}render(){return new e(l).generateTemplate(this.params)}insertBlock(t,n){const r=(new DOMParser).parseFromString(new e(l).generateTemplate(this.params),"text/html").getElementsByTagName("div")[0],a=document.querySelector(t);if(r&&a){for(let e in this.params)this.params[e]||r.removeAttribute(e);n&&(a.innerHTML=""),a.appendChild(r)}}}function c(){const e=document.querySelector(".reg-form");if(e&&function(e){const t=e.querySelectorAll(".form-block"),n=e.querySelector(".info-block");let r=!0,a="",s="";return n.textContent="",t.forEach((function(e){let t=e.querySelector("input");t&&(e.classList.contains("none-block")||i(t)||(r=!1),t.value||!t.getAttribute("data-required")||e.classList.contains("none-block")||(r=!1,n.textContent="Не все обязательные поля заполнены."),"password"==t.name&&(a=t.value),"repeat_password"==t.name&&(s=t.value))})),a&&s&&a!=s&&(r=!1,n.textContent="Пароли не совпадают."),r}(e)){const t=new FormData(e);console.log(...t)}}const d='\n\t<div class="form-block {{classList}}">\n\t\t<label class="form-label" for="{{id}}">{{label}}</label>\n\t\t<div class="input-wrapper">\n\t\t\t<input class="form-control input-styles" data-required="{{required}}" data-error-text="{{errorText}}" data-validation-type="{{validationType}}" id="{{id}}" type="{{type}}" value="{{value}}" name="{{name}}">\n\t\t\t<div class="error-text-block"></div>\n\t\t</div>\n\t</div>';class m{constructor(e){this.params=e}render(){return new e(d).generateTemplate(this.params)}insertBlock(t,n){const r=(new DOMParser).parseFromString(new e(d).generateTemplate(this.params),"text/html").getElementsByTagName("div")[0],a=document.querySelector(t);if(!r||!a)return;for(let e in this.params)this.params[e]||r.removeAttribute(e);n&&(a.innerHTML="");let s=r.querySelector("input");s.addEventListener("focus",(function(){s.classList.add("focus-input")})),s.addEventListener("blur",(function(){s.classList.remove("focus-input"),i(s)})),a.appendChild(r)}}const p={title:"Регистрация"},u=[{element:".reg-form-fieldset",id:"email",name:"email",label:"E-mail",value:"",type:"text",required:!0,errorText:"Неверный формат email",validationType:"email",classList:""},{element:".reg-form-fieldset",id:"login",name:"login",label:"Логин",value:"",type:"text",required:!0,errorText:"Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов",validationType:"login",classList:""},{element:".reg-form-fieldset",id:"secondName",name:"second_name",label:"Фамилия",value:"",type:"text",required:!0,errorText:"Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса",validationType:"name",classList:""},{element:".reg-form-fieldset",id:"firstName",name:"first_name",label:"Имя",value:"",type:"text",required:!0,errorText:"Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса",validationType:"name",classList:""},{element:".reg-form-fieldset",id:"phone",name:"phone",label:"Телефон",value:"",type:"text",required:!0,errorText:"Телефон должен содержать от 10 до 15 символов, состоит из цифр, может начинаться с плюса",validationType:"phone",classList:""},{element:".reg-form-fieldset",id:"password",name:"password",label:"Пароль",value:"",type:"password",required:!0,errorText:"Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру",validationType:"password",classList:""},{element:".reg-form-fieldset",id:"repeatPassword",name:"repeat_password",label:"Повторите пароль",value:"",type:"password",required:!0,errorText:"Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру",validationType:"password",classList:""}],f=[{element:".buttons-wrapper",id:"",name:"Зарегистрироваться",classes:"add-link",onClick:e=>{e.preventDefault(),c()}},{element:".buttons-wrapper",id:"",name:"Назад",classes:"reg-link",onClick:e=>{e.preventDefault(),h()}}];const v={title:"Вход"},g=[{element:".reg-form-fieldset",id:"login",name:"login",label:"Логин",value:"",type:"text",required:!0,errorText:"",validationType:"",classList:""},{element:".reg-form-fieldset",id:"password",name:"password",label:"Пароль",value:"",type:"password",required:!0,errorText:"",validationType:"",classList:""}],w=[{element:".buttons-wrapper",id:"",name:"Авторизоваться",classes:"add-link",onClick:e=>{e.preventDefault(),c()}},{element:".buttons-wrapper",id:"",name:"Зарегистрироваться",classes:"reg-link",onClick:e=>{e.preventDefault(),new o(p).insertBlock("#app",!0),u.forEach((function(e){new m(e).insertBlock(e.element)})),f.forEach((function(e){new n(e).insertBlock(e.element)}))}}];function h(){new o(v).insertBlock("#app",!0),g.forEach((function(e){new m(e).insertBlock(e.element)})),w.forEach((function(e){new n(e).insertBlock(e.element)}))}const b={title:"Ошибка 404",errorText:"Страница не найдена"},T=[{element:".warning-buttons-wrapper",id:"",name:"Назад",classes:"add-link",onClick:e=>{e.preventDefault(),h()}}];document.addEventListener("DOMContentLoaded",(function(){new a(b).insertBlock("#app",!0),T.forEach((function(e){new n(e).insertBlock(e.element)}))}))})();
//# sourceMappingURL=index.ceacd5bd.js.map
