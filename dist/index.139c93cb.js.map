{"mappings":"AAQe,MAAAA,EAELC,iBAAgB,gBAEhBC,cAAwB,GAEjCC,YAAYD,GACXE,KAAKF,cAAgBA,EAGtBG,iBAAiBC,GAChB,OAAIA,GAAYF,KAAKF,cACbE,KAAKG,mBAAmBD,EAAUF,KAAKF,cAAeE,KAAKH,kBAE5D,GAGRM,mBAAmBD,EAAUE,EAAKC,GACjC,IAAIC,EAAeD,EAAgBE,KAAKH,GACxC,GAAIE,GAAgBA,EAAa,GAAG,CACnC,MAAME,EAAcF,EAAa,GACjC,IAAK,IAAIG,KAAOP,EACXO,GAAOH,EAAa,IACa,iBAAzBJ,EAASM,KACnBJ,EAAMA,EAAIM,QAAQJ,EAAa,GAAIJ,EAASM,KAKhD,OAAIH,EAAgBE,KAAKH,GACjBJ,KAAKG,mBAAmBD,EAAUE,EAAKC,GAEvCD,GCpCV,MAAMO,EAAoB,8YAoCxBC,GACDZ,KAAAY,OAAAA,uPCrCD,MAAMC,EAAqB,4VA8BzBC,EAEDf,YAAYa,GACXZ,KAAAY,OAAcA,WAGiF,OAAO,IAAChB,EAAAiB,GAAAZ,iBAAAD,KAAAY,oBAEvGG,GACD,MAAAC,GAAA,IAAAC,WAAAC,gBAAA,IAAAtB,EAAAiB,GAAAZ,iBAAAD,KAAAY,QAAA,aAAAO,qBAAA,OAAA,oJC7Bc,MAAAC,EAGdrB,YAAYa,GACXZ,KAAKY,OAASA,EAIfS,SACC,OAAO,IAAIzB,EAnBe,6DAmBkBK,iBAAiBD,KAAKY,QAGnEU,YAAYP,GACX,MAAMC,GAAQ,IAAIC,WAAYC,gBAAgB,IAAItB,EAvBxB,6DAuByDK,iBAAiBD,KAAKY,QAAS,aAAaO,qBAAqB,UAAU,GACxJI,EAAUC,SAASC,cAAcV,GAClCC,GAAUO,IACfP,EAAMU,iBAAiB,QAAS1B,KAAKY,OAAOe,SAC5CJ,EAAQK,YAAYZ,KCxBtB,MAAMa,EAAgC,CACrCC,MAAO,OACHC,UAAO,IAGNC,EAAqC,CAC1C,CACCjB,QAAS,qBACTkB,GAAI,QACJC,KAAM,QACNC,MAAO,QACFC,MAAE,GACPC,KAAM,OACNC,UAAW,GACXC,qBAAsB,IAEvB,CACCxB,QAAS,qBACTkB,GAAI,WACJC,KAAM,WACNC,MAAO,SACDC,MAAC,GACPC,KAAM,WACNC,UAAW,GACXC,qBAAsB,KAIlBC,EAAuC,CAC5C,CACCzB,QAAS,mBACTkB,GAAI,GACJC,KAAM,iBACQO,QAAL,WACTd,QAAUe,IACTA,EAAMC,iBACNC,QAAQC,IAAI,MAGd,CACC9B,QAAS,mBACTkB,GAAI,GACJC,KAAM,qBACNO,QAAS,WACTd,QAAUe,IACTE,QAAQC,IAAI,qDCjDf,WACID,QAAQC,IAAI,aDuDErB,SAASsB,eAAe,OACzC,IAAIC,EAAKlB,GAAmBP,YAAY,QAExCU,EAAoBgB,SAAQ,SAASC,GACpC,IAAInC,EAAMmC,GAAO3B,YAAY2B,EAAMlC,YAGpCyB,EAAqBQ,SAAQ,SAASE,GACrC,IAAI9B,EAAO8B,GAAQ5B,YAAY4B,EAAOnC","sources":["src/utilities/TemplateGen.ts","src/elements/form-block.ts","src/elements/input-block.ts","src/elements/button-block.ts","src/pages/authorization.ts","src/main.ts"],"sourcesContent":["//Генератор шаблонов\r\n//На вход подаётся строка с макросами в скобках {{}} и объект со значениями макросов\r\n//Пример:\r\n/*\r\n\tСтрока: '<div class=\"{{className}}\"></div>'\r\n\tОбъект: {className: 'test-class'}\r\n*/\r\n\r\nexport default class TemplateGen {\r\n\r\n\treadonly TEMPLATE_REGULAR = /\\{\\{(.*?)\\}\\}/;\r\n\r\n\treadonly templateBlock: string = \"\";\r\n\r\n\tconstructor(templateBlock: string) {\r\n\t\tthis.templateBlock = templateBlock\r\n\t}\r\n\r\n\tgenerateTemplate(template: Record<string, unknown>): string {\r\n\t\tif (template && this.templateBlock){\r\n\t\t\treturn this.changeTemplateKeys(template, this.templateBlock, this.TEMPLATE_REGULAR);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tchangeTemplateKeys(template, tmp, templateRegular): string {\r\n\t\tlet templateKeys = templateRegular.exec(tmp);\r\n\t\tif (templateKeys && templateKeys[1]){\r\n\t\t\tconst templateKey = templateKeys[1];\r\n\t\t\tfor (let key in template) {\r\n\t\t\t\tif (key == templateKeys[1]){\r\n\t\t\t\t\tif (typeof template[templateKey] == \"string\"){\r\n\t\t\t\t\t\ttmp = tmp.replace(templateKeys[0], template[templateKey]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\tif (templateRegular.exec(tmp)){\r\n\t\t\treturn this.changeTemplateKeys(template, tmp, templateRegular);\r\n\t\t} else {\r\n\t\t\treturn tmp;\r\n\t\t}\r\n\t}\r\n}","//Блок input\r\n\r\nimport TemplateGen from '../utilities/TemplateGen'\r\n\r\nconst formBlockTemplate = `\r\n\t<div class=\"reg-form-page\">\r\n\t\t<div class=\"reg-form-wrapper\">\r\n\t\t\t<h2>{{title}}</h2>\r\n\t\t\t<form class=\"reg-form\">\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<div class=\"reg-form-fieldset\"></div>\r\n\t\t\t\t\t<div class=\"form-block info-block\">{{errorInfo}}</div>\r\n\t\t\t\t\t<div class=\"form-block buttons-wrapper\"></div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type FormParams = {\r\n\ttitle: string,\r\n\terrorInfo: string,\r\n};\r\n\r\nexport default class Form /*extends Block*/ {\r\n\tparams: FormParams\r\n\r\n\tconstructor(params: FormParams) {\r\n\t\tthis.params = params;\r\n\t\t//super('button', props, props.className)\r\n\t}\r\n\r\n\trender(): string {\r\n\t\treturn new TemplateGen(formBlockTemplate).generateTemplate(this.params);\r\n\t}\r\n\r\n\tinsertBlock(element: string): void {\r\n\t\tconst inner = new DOMParser().parseFromString(new TemplateGen(formBlockTemplate).generateTemplate(this.params), \"text/html\").getElementsByTagName(\"div\")[0]; //this.element;\r\n\t\tconst wrapper = document.querySelector(element);\r\n\t\tif (!inner || !wrapper) return;\r\n\t\twrapper.appendChild(inner);\r\n\t}\r\n}","//Блок input\r\n\r\nimport TemplateGen from '../utilities/TemplateGen'\r\n\r\nconst inputBlockTemplate = `\r\n\t<div class=\"form-block\">\r\n\t\t<label class=\"form-label\" for=\"{{id}}\">{{label}}</label>\r\n\t\t<div class=\"input-wrapper {{errorHightlightClass}}\">\r\n\t\t\t<input class=\"form-control input-styles \" id=\"{{id}}\" type=\"{{type}}\" value=\"{{value}}\" name=\"{{name}}\">\r\n\t\t\t<div class=\"error-text-block\">{{errorText}}</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type InputParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tlabel: string,\r\n\tvalue: string,\r\n\ttype: string,\r\n\tname: string,\r\n\terrorText: string,\r\n\terrorHightlightClass: string,\r\n}\r\n\r\nexport default class Input /*extends Block*/ {\r\n\tparams: InputParams\r\n\r\n\tconstructor(params: InputParams) {\r\n\t\tthis.params = params;\r\n\t\t//super('button', props, props.className)\r\n\t}\r\n\r\n\trender(): string {\r\n\t\treturn new TemplateGen(inputBlockTemplate).generateTemplate(this.params);\r\n\t}\r\n\r\n\tinsertBlock(element: string): void {\r\n\t\tconst inner = new DOMParser().parseFromString(new TemplateGen(inputBlockTemplate).generateTemplate(this.params), \"text/html\").getElementsByTagName(\"div\")[0]; //this.element;\r\n\t\tconst wrapper = document.querySelector(element);\r\n\t\tif (!inner || !wrapper) return;\r\n\t\tinner.querySelector('input').addEventListener('focus', () => inner.classList.add('focus-input'), true);\r\n\t\twrapper.appendChild(inner);\r\n\t}\r\n}","//Блок кнопки\r\n\r\nimport TemplateGen from '../utilities/TemplateGen'\r\n\r\nconst buttonBlockTemplate = `<button class=\"button-link {{classes}}\">{{name}}</button>`;\r\n\r\nexport type ButtonParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tclasses: string,\r\n\tname: string,\r\n\tonClick: (event: Event) => void\r\n}\r\n\r\nexport default class Button /*extends Block*/ {\r\n\tparams: ButtonParams\r\n\r\n\tconstructor(params: ButtonParams) {\r\n\t\tthis.params = params;\r\n\t\t//super('button', props, props.className)\r\n\t}\r\n\r\n\trender(): string {\r\n\t\treturn new TemplateGen(buttonBlockTemplate).generateTemplate(this.params);\r\n\t}\r\n\r\n\tinsertBlock(element: string): void {\r\n\t\tconst inner = new DOMParser().parseFromString(new TemplateGen(buttonBlockTemplate).generateTemplate(this.params), \"text/html\").getElementsByTagName(\"button\")[0]; //this.element;\r\n\t\tconst wrapper = document.querySelector(element);\r\n\t\tif (!inner || !wrapper) return;\r\n\t\tinner.addEventListener('click', this.params.onClick);\r\n\t\twrapper.appendChild(inner);\r\n\t}\r\n}","//Страница авторизации\r\n\r\nimport TemplateGen from '../utilities/TemplateGen'\r\nimport Form, { FormParams }  from '../elements/form-block'\r\nimport Input, { InputParams }  from '../elements/input-block'\r\nimport Button, { ButtonParams }  from '../elements/button-block'\r\n\r\nconst authorizationForm: FormParams = {\r\n\ttitle: 'Вход',\r\n\terrorInfo: '',\r\n}\r\n\r\nconst authorizationInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\terrorText: '',\r\n\t\terrorHightlightClass: '', //error-input\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\terrorText: '',\r\n\t\terrorHightlightClass: '',\r\n\t},\r\n];\r\n\r\nconst authorizationButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Авторизоваться',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconsole.log(88);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Зарегистрироваться',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tconsole.log(99)\r\n\t\t},\r\n\t},\r\n]\r\n\r\nexport default function(): void {\r\n\r\n\tconst appBlock = document.getElementById(\"app\");\r\n\tnew Form(authorizationForm).insertBlock(\"#app\");\r\n\r\n\tauthorizationInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tauthorizationButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","import './scss/init.scss';\r\nimport authorization from './pages/authorization'\r\n\r\nfunction ready() {\r\n    console.log('DOM готов');\r\n    authorization();\r\n\r\n    /*let regButton: any = document.getElementById(\"regButton\");\r\n    console.log(regButton);\r\n    if (regButton){\r\n\t\tregButton.addEventListener(\"click\", function(){\r\n\t\t\tconsole.log(regButton);\r\n\t\t\treturn false;\r\n\t\t});\r\n\t}*/\r\n\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);"],"names":["$ea179994c2e62f0e$export$2e2bcd8739ae039","TEMPLATE_REGULAR","templateBlock","constructor","this","generateTemplate","template","changeTemplateKeys","tmp","templateRegular","templateKeys","exec","templateKey","key","replace","$160682af531b0660$var$formBlockTemplate","params","$3b5868aba66e82f2$var$inputBlockTemplate","$3b5868aba66e82f2$export$2e2bcd8739ae039","element","inner","DOMParser","parseFromString","getElementsByTagName","$56aaf2b78fa10785$export$2e2bcd8739ae039","render","insertBlock","wrapper","document","querySelector","addEventListener","onClick","appendChild","$9d66ae0e255a5bf1$var$authorizationForm","title","errorInfo","$9d66ae0e255a5bf1$var$authorizationInputs","id","name","label","value","type","errorText","errorHightlightClass","$9d66ae0e255a5bf1$var$authorizationButtons","classes","event","preventDefault","console","log","getElementById","$160682af531b0660$export$2e2bcd8739ae039","forEach","input","button"],"version":3,"file":"index.139c93cb.js.map","sourceRoot":"../"}