(()=>{class e{TEMPLATE_REGULAR=/\{\{(.*?)\}\}/;templateBlock="";constructor(e){this.templateBlock=e}generateTemplate(e){return e&&this.templateBlock?this.changeTemplateKeys(e,this.templateBlock,this.TEMPLATE_REGULAR):""}changeTemplateKeys(e,t,n){let r=n.exec(t);if(r&&r[1]){const n=r[1];for(let a in e)a==r[1]&&"string"==typeof e[n]&&(t=t.replace(r[0],e[n]))}return n.exec(t)?this.changeTemplateKeys(e,t,n):t}}const t={email:new RegExp(/^([A-Za-z0-9_\.-]+)@([A-Za-z0-9_\.-]+)\.([a-z\.]{2,6})$/),login:new RegExp(/^[A-Za-z0-9_\.-]{3,20}$/),name:new RegExp(/^[A-ZА-Я][a-zA-Zа-яА-Я-]+$/),phone:new RegExp(/^\+?\d{10,15}$/),password:new RegExp(/^((?=.*?[A-Z])(?=.*?[0-9])\S{8,40})\S$/)},n=function(e){const n=e.getAttribute("data-validation-type"),r=e.getAttribute("data-error-text"),a=e.value,l=t[n],o=e.parentElement,s=o.querySelector(".error-text-block");return l&&!l.test(a)?(o.classList.add("error-input"),s&&(s.textContent=r||"Возникла ошибка при заполнении формы. Пожалуйста, проверьте введённые данные."),!1):(o.classList.remove("error-input"),s&&(s.textContent=""),!0)},r='\n\t<div class="reg-form-page">\n\t\t<div class="reg-form-wrapper">\n\t\t\t<h2>{{title}}</h2>\n\t\t\t<form class="reg-form">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<div class="reg-form-fieldset"></div>\n\t\t\t\t\t<div class="form-block info-block"></div>\n\t\t\t\t\t<div class="form-block buttons-wrapper"></div>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</div>\n\t</div>';class a{constructor(e){this.params=e}render(){return new e(r).generateTemplate(this.params)}insertBlock(t,n){const a=(new DOMParser).parseFromString(new e(r).generateTemplate(this.params),"text/html").getElementsByTagName("div")[0],l=document.querySelector(t);a&&l&&(n&&(l.innerHTML=""),l.appendChild(a))}}function l(){const e=document.querySelector(".reg-form");if(console.log(e),e&&function(e){const t=e.querySelectorAll("input");let r=!0,a="",l="";return t.forEach((function(e){n(e)||(r=!1),"password"==e.name&&(a=e.value),"repeat_password"==e.name&&(l=e.value)})),console.log(a),console.log(l),e.querySelector(".info-block").textContent="",a&&l&&a!=l&&(r=!1,e.querySelector(".info-block").textContent="Пароли не совпадают."),r}(e)){const t=new FormData(e);console.log(...t)}}const o='\n\t<div class="form-block">\n\t\t<label class="form-label" for="{{id}}">{{label}}</label>\n\t\t<div class="input-wrapper">\n\t\t\t<input class="form-control input-styles" data-error-text="{{errorText}}" data-validation-type="{{validationType}}" id="{{id}}" type="{{type}}" value="{{value}}" name="{{name}}">\n\t\t\t<div class="error-text-block"></div>\n\t\t</div>\n\t</div>';class s{constructor(e){this.params=e}render(){return new e(o).generateTemplate(this.params)}insertBlock(t){const r=(new DOMParser).parseFromString(new e(o).generateTemplate(this.params),"text/html").getElementsByTagName("div")[0],a=document.querySelector(t);if(!r||!a)return;let l=r.querySelector("input");l.addEventListener("focus",(function(){l.classList.add("focus-input")})),l.addEventListener("blur",(function(){l.classList.remove("focus-input"),n(l)})),a.appendChild(r)}}const i='<button class="button-link {{classes}}">{{name}}</button>';class c{constructor(e){this.params=e}render(){return new e(i).generateTemplate(this.params)}insertBlock(t){const n=(new DOMParser).parseFromString(new e(i).generateTemplate(this.params),"text/html").getElementsByTagName("button")[0],r=document.querySelector(t);n&&r&&(n.addEventListener("click",this.params.onClick),r.appendChild(n))}}const p={title:"Регистрация"},d=[{element:".reg-form-fieldset",id:"email",name:"email",label:"E-mail",value:"",type:"text",errorText:"Неверный формат email",validationType:"email"},{element:".reg-form-fieldset",id:"login",name:"login",label:"Логин",value:"",type:"text",errorText:"Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов",validationType:"login"},{element:".reg-form-fieldset",id:"password",name:"password",label:"Пароль",value:"",type:"password",errorText:"Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру",validationType:"password"},{element:".reg-form-fieldset",id:"repeatPassword",name:"repeat_password",label:"Повторите пароль",value:"",type:"password",errorText:"Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру",validationType:"password"}],m=[{element:".buttons-wrapper",id:"",name:"Зарегистрироваться",classes:"add-link",onClick:e=>{e.preventDefault(),l()}},{element:".buttons-wrapper",id:"",name:"Назад",classes:"reg-link",onClick:e=>{e.preventDefault(),v()}}];const u={title:"Вход"},f=[{element:".reg-form-fieldset",id:"login",name:"login",label:"Логин",value:"",type:"text",errorText:"",validationType:""},{element:".reg-form-fieldset",id:"password",name:"password",label:"Пароль",value:"",type:"password",errorText:"",validationType:""}],g=[{element:".buttons-wrapper",id:"",name:"Авторизоваться",classes:"add-link",onClick:e=>{e.preventDefault(),l()}},{element:".buttons-wrapper",id:"",name:"Зарегистрироваться",classes:"reg-link",onClick:e=>{e.preventDefault(),new a(p).insertBlock("#app",!0),d.forEach((function(e){new s(e).insertBlock(e.element)})),m.forEach((function(e){new c(e).insertBlock(e.element)}))}}];function v(){new a(u).insertBlock("#app",!0),f.forEach((function(e){new s(e).insertBlock(e.element)})),g.forEach((function(e){new c(e).insertBlock(e.element)}))}document.addEventListener("DOMContentLoaded",(function(){v()}))})();
//# sourceMappingURL=index.8e055129.js.map
