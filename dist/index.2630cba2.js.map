{"mappings":"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","sources":["src/utilities/TemplateGen.ts","src/utilities/eventbus.ts","src/elements/block.ts","src/utilities/validation.ts","src/elements/form-block.ts","src/elements/input-block.ts","src/elements/button-block.ts","src/elements/error-block.ts","src/pages/error.ts","src/elements/image-input-block.ts","src/pages/profile.ts","src/pages/registration.ts","src/pages/authorization.ts","src/main.ts"],"sourcesContent":["//Генератор шаблонов\r\n//На вход подаётся строка с макросами в скобках {{}} и объект со значениями макросов\r\n//Пример:\r\n/*\r\n\tСтрока: '<div class=\"{{className}}\"></div>'\r\n\tОбъект: {className: 'test-class'}\r\n*/\r\n\r\nexport default class TemplateGen {\r\n\r\n\treadonly TEMPLATE_REGULAR = /\\{\\{(.*?)\\}\\}/;\r\n\r\n\treadonly templateBlock: string = \"\";\r\n\r\n\tconstructor(templateBlock: string) {\r\n\t\tthis.templateBlock = templateBlock;\r\n\t}\r\n\r\n\tgenerateTemplate(template: Record<string, unknown>): string {\r\n\t\tif (template && this.templateBlock){\r\n\t\t\treturn this.changeTemplateKeys(template, this.templateBlock, this.TEMPLATE_REGULAR);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tchangeTemplateKeys(template, tmp, templateRegular): string {\r\n\t\tconst templateKeys = templateRegular.exec(tmp);\r\n\t\tif (templateKeys && templateKeys[1]){\r\n\t\t\tconst templateKey = templateKeys[1];\r\n\t\t\tif (templateKey in template){\r\n\t\t\t\tlet templateValue = template[templateKey];\r\n\t\t\t\tif ((typeof templateValue != \"object\") && (typeof templateValue != \"function\")){\r\n\t\t\t\t\ttemplateValue = templateValue.toString();\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttemplateValue = \"\";\r\n\t\t\t\t}\r\n\t\t\t\ttmp = tmp.replace(templateKeys[0], templateValue);\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp.replace(templateKeys[0], \"\");\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tif (templateRegular.exec(tmp)){\r\n\t\t\treturn this.changeTemplateKeys(template, tmp, templateRegular);\r\n\t\t} else {\r\n\t\t\treturn tmp;\r\n\t\t}\r\n\t}\r\n}","//Шина событий\r\n\r\nexport class EventBus {\r\n\tlisteners: Record<string, Array<() => void>>;\r\n\r\n\tconstructor() {\r\n\t\tthis.listeners = {};\r\n\t}\r\n\r\n\ton(event: string, callback: () => void): void {\r\n\t\tif (!this.listeners[event]) {\r\n\t\t\tthis.listeners[event] = [];\r\n\t\t}\r\n\t\tthis.listeners[event].push(callback);\r\n\t}\r\n\r\n\toff(event: string, callback: () => void): void {\r\n\t\tif (!this.listeners[event]) {\r\n\t\t\tthrow new Error(`Нет события: ${event}`);\r\n\t\t}\r\n\r\n\t\tthis.listeners[event] = this.listeners[event].filter(\r\n\t\t\tlistener => listener !== callback\r\n\t\t);\r\n\t}\r\n\r\n\temit(event: string, ...args: unknown[]) {\r\n\t\tif (!this.listeners[event]) {\r\n\t\t\tthrow new Event(`Нет события: ${event}`);\r\n\t\t}\r\n\r\n\t\tthis.listeners[event].forEach(function (listener: (...args: unknown[]) => void) {\r\n\t\t\tlistener(...args);\r\n\t\t});\r\n\t}\r\n}","//Блоки - общее\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport {EventBus} from '../utilities/eventbus';\r\n\r\ntype BlockMetaData = {\r\n\ttagName: string,\r\n\tprops: Record<string, unknown>\r\n}\r\n\r\nexport default class Block {\r\n\tstatic EVENTS = {\r\n\t\tINIT: \"init\",\r\n\t\tFLOW_CDM: \"flow:component-did-mount\",\r\n\t\tFLOW_CDU: \"flow:component-did-update\",\r\n\t\tFLOW_RENDER: \"flow:render\"\r\n\t};\r\n\r\n\tnoTagName: false;\r\n\ttemplate: string;\r\n\tprops: Record<string, unknown>;\r\n\teventBus: () => EventBus;\r\n\r\n\t_element: HTMLElement = null;\r\n\t_meta: BlockMetaData;\r\n\r\n\tconstructor(params: Record<string, unknown>, template: string, noTagName: boolean, tagName = 'div') {\r\n\t\tthis.template = template;\r\n\t\tthis.noTagName = noTagName;\r\n\t\tconst eventBus = new EventBus();\r\n\t\tthis._meta = {\r\n\t\t\ttagName,\r\n\t\t\tparams\r\n\t\t};\r\n\r\n\t\tthis.props = this._makePropsProxy(params);\r\n\r\n\t\tthis.eventBus = () => eventBus;\r\n\r\n\t\tthis._registerEvents(eventBus);\r\n\t\teventBus.emit(Block.EVENTS.INIT);\r\n\t}\r\n\r\n\t_registerEvents(eventBus) {\r\n\t\teventBus.on(Block.EVENTS.INIT, this.init.bind(this));\r\n\t\teventBus.on(Block.EVENTS.FLOW_CDM, this._componentDidMount.bind(this));\r\n\t\teventBus.on(Block.EVENTS.FLOW_CDU, this._componentDidUpdate.bind(this));\r\n\t\teventBus.on(Block.EVENTS.FLOW_RENDER, this._render.bind(this));\r\n\t}\r\n\r\n\t_createResources(): void {\r\n\t\tconst { tagName } = this._meta;\r\n\t\tthis._element = this._createDocumentElement(tagName);\r\n\t\tthis._element;\r\n\t}\r\n\r\n\tinit(): void {\r\n\t\tthis._createResources();\r\n\t\tthis.eventBus().emit(Block.EVENTS.FLOW_CDM);\r\n\t}\r\n\r\n\t_componentDidMount(): void {\r\n\t\tthis.componentDidMount();\r\n\t\tthis.eventBus().emit(Block.EVENTS.FLOW_RENDER);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\treturn;\r\n\t}\r\n\r\n\tdispatchComponentDidMoun() {return;}\r\n\r\n\t_componentDidUpdate(oldProps: Record<string, unknown>, newProps: Record<string, unknown>): void {\r\n\t\tconst response = this.componentDidUpdate(oldProps, newProps);\r\n\t\tif (!response) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tcomponentDidUpdate(oldProps: Record<string, unknown>, newProps: Record<string, unknown>,): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsetProps = nextProps => {\r\n\t\tif (!nextProps) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tObject.assign(this.props, nextProps);\r\n\t};\r\n\r\n\tget element(): HTMLElement {\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t_render() {\r\n\t\tconst block = this.render();\r\n\t\tif (this._element){\r\n\t\t\tthis._element.innerHTML = block;\r\n\t\t}\r\n\t}\r\n\r\n\trender(): string {\r\n\t\treturn new TemplateGen(this.template).generateTemplate(this.props);\r\n\t}\r\n\r\n\tgetContent(): HTMLElement {\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t_makePropsProxy(props: Record<string, unknown>): Record<string, unknown> {\r\n\t\tconst self = this;\r\n\r\n\t\treturn new Proxy(props, {\r\n\t\t\tget(target, property) {\r\n\t\t\t\tif (typeof target[property] == 'function'){\r\n\t\t\t\t\treturn target[property].bind(target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn target[property];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tset(target, property, value) {\r\n\t\t\t\ttarget[property] = value;\r\n\t\t\t\tself.eventBus().emit(Block.EVENTS.FLOW_CDU, {...target}, target);\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tdeleteProperty() {\r\n\t\t\t\tthrow new Error(\"Нет доступа\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_createDocumentElement(tagName): HTMLElement {\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n\r\n\tshow(): void {\r\n\t\tconst element = this.getContent();\r\n\t\tif (element){\r\n\t\t\telement.style.display = \"block\";\r\n\t\t}\t\t\r\n\t}\r\n\r\n\thide(): void {\r\n\t\tconst element = this.getContent();\r\n\t\tif (element){\r\n\t\t\telement.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet inner = this.getContent(); //new DOMParser().parseFromString(new TemplateGen(this.template).generateTemplate(this.props), \"text/html\").getElementsByTagName(\"body\")[0].childNodes[0];\r\n\t\tconst wrapper = document.querySelector(element);\r\n\t\tif (!inner || !wrapper) return {};\r\n\t\tif (!this.noTagName){\r\n\t\t\tinner = inner.children[0];\r\n\t\t}\r\n\t\tfor (let el of wrapper.querySelectorAll('[id=\"\"]')) {\r\n\t\t\tel.removeAttribute('id');\r\n\t\t}\r\n\t\tif (clean){\r\n\t\t\twrapper.innerHTML = \"\";\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tinner: inner,\r\n\t\t\twrapper: wrapper\r\n\t\t};\r\n\t}\r\n}","//Валидация\r\n\r\nconst defaultValidationErrorMessage = \"Возникла ошибка при заполнении формы. Пожалуйста, проверьте введённые данные.\";\r\nconst repeatPasswordErrorMessage = \"Пароли не совпадают.\";\r\nconst requiredFieldsErrorMessage = \"Не все обязательные поля заполнены.\";\r\nconst requiredFieldMessage = \"Обязательное поле.\";\r\n\r\nconst validationRegex: Record<string, RegExp> = {\r\n\temail: new RegExp(/^([A-Za-z0-9_\\.-]+)@([A-Za-z0-9_\\.-]+)\\.([a-z\\.]{2,6})$/),\r\n\tlogin: new RegExp(/^[A-Za-z0-9_\\.-]{3,20}$/),\r\n\tname: new RegExp(/^[A-ZА-Я][a-zA-Zа-яА-Я-]+$/),\r\n\tphone: new RegExp(/^\\+?\\d{10,15}$/),\r\n\tpassword: new RegExp(/^((?=.*?[A-Z])(?=.*?[0-9])\\S{8,40})\\S$/),\r\n};\r\n\r\nexport const validValue = function(input: HTMLInputElement): boolean {\r\n\tconst validationType = input.getAttribute(\"data-validation-type\");\r\n\tconst errorText = input.getAttribute(\"data-error-text\");\r\n\r\n\tconst value = input.value;\r\n\tconst regex = validationRegex[validationType];\r\n\r\n\tconst inputWrapper = input.parentElement;\r\n\tconst errorBlock = inputWrapper.querySelector(\".error-text-block\");\r\n\r\n\tif (regex && !regex.test(value)) {\r\n\t\tinputWrapper.classList.add('error-input');\r\n\t\tif (errorBlock){\r\n\t\t\tif (errorText){\r\n\t\t\t\terrorBlock.textContent = errorText;\r\n\t\t\t} else {\r\n\t\t\t\terrorBlock.textContent = defaultValidationErrorMessage;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\treturn false;\r\n\t}\r\n\tinputWrapper.classList.remove('error-input');\r\n\tif (errorBlock){\r\n\t\terrorBlock.textContent = \"\";\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nexport const validForm = function(form: HTMLFormElement): boolean {\r\n\tconst formBlocks = form.querySelectorAll('.form-block');\r\n\tconst infoBlock = form.querySelector(\".info-block\");\r\n\r\n\tlet isFormValid = true;\r\n\tlet password = \"\", repeatPassword = \"\";\r\n\r\n\tif (infoBlock){\r\n\t\tinfoBlock.textContent = \"\";\r\n\t}\r\n\r\n\tformBlocks.forEach(function(formBlock) {\r\n\t\tconst input = formBlock.querySelector(\"input\") || formBlock.querySelector(\"textarea\");\r\n\t\tif (input){\r\n\t\t\tconst errorText = input.getAttribute(\"data-error-text\");\r\n\r\n\t\t\tif (!formBlock.classList.contains(\"none-block\") && !validValue(input)) {\r\n\t\t\t\tisFormValid = false;\r\n\t\t\t}\r\n\t\t\tif (!input.value && input.getAttribute(\"data-required\") && !formBlock.classList.contains(\"none-block\")){\r\n\t\t\t\tisFormValid = false;\r\n\r\n\t\t\t\tconst errorWrapper = input.parentElement;\r\n\t\t\t\tif (errorWrapper) {\r\n\t\t\t\t\terrorWrapper.classList.add(\"error-input\");\r\n\r\n\t\t\t\t\tif (errorText){\r\n\t\t\t\t\t\terrorWrapper.querySelector(\".error-text-block\").textContent = errorText;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terrorWrapper.querySelector(\".error-text-block\").textContent = requiredFieldMessage;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (infoBlock){\r\n\t\t\t\t\tinfoBlock.textContent = requiredFieldsErrorMessage;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (input.name == \"password\"){\r\n\t\t\t\tpassword = input.value;\r\n\t\t\t}\r\n\t\t\tif (input.name == \"repeat_password\"){\r\n\t\t\t\trepeatPassword = input.value;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\tif (password && repeatPassword && (password != repeatPassword)){\r\n\t\tisFormValid = false;\r\n\t\tinfoBlock.textContent = repeatPasswordErrorMessage;\r\n\t}\t\r\n\treturn isFormValid;\r\n};","//Блок input\r\n\r\nimport Block from '../elements/block';\r\nimport {validForm} from \"../utilities/validation\";\r\n\r\nconst formBlockTemplate = `\r\n\t<div class=\"reg-form-page\">\r\n\t\t<div class=\"reg-form-wrapper\">\r\n\t\t\t<h2>{{title}}</h2>\r\n\t\t\t<form class=\"reg-form\">\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<div class=\"reg-form-fieldset\"></div>\r\n\t\t\t\t\t<div class=\"form-block info-block\"></div>\r\n\t\t\t\t\t<div class=\"form-block buttons-wrapper\"></div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type FormParams = {\r\n\ttitle: string\r\n};\r\n\r\nexport default class Form extends Block {\r\n\r\n\tconstructor(params: FormParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = formBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tconst insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}\r\n\r\nexport function onSubmitForm(selector: string, callback): void {\r\n\tconst form: HTMLFormElement = document.querySelector(selector);\r\n\tif (!form) return;\r\n\r\n\tif (validForm(form)){\r\n\t\tconst data: FormData = new FormData(form);\r\n\t\tconsole.log(...data);\r\n\t\tif (callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\treturn;\r\n}","//Блок input\r\n\r\nimport Block from '../elements/block';\r\nimport {validValue} from \"../utilities/validation\";\r\n\r\nconst inputBlockTemplate = `\r\n\t<div class=\"form-block {{classList}}\">\r\n\t\t<label class=\"form-label\" for=\"{{id}}\">{{label}}</label>\r\n\t\t<div class=\"input-wrapper\">\r\n\t\t\t<input class=\"form-control input-styles\" data-required=\"{{required}}\" data-error-text=\"{{errorText}}\" \r\n\t\t\tdata-validation-type=\"{{validationType}}\" id=\"{{id}}\" type=\"{{type}}\" value=\"{{value}}\" name=\"{{name}}\">\r\n\t\t\t<div class=\"error-text-block\"></div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type InputParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tlabel: string,\r\n\tvalue: string,\r\n\ttype: string,\r\n\tname: string,\r\n\trequired: boolean,\r\n\terrorText: string,\r\n\tvalidationType: string,\r\n\tclassList: string,\r\n}\r\n\r\nexport default class Input extends Block {\r\n\t//params: InputParams\r\n\r\n\tconstructor(params: InputParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = inputBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\r\n\t\tconst insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tconst inner = insertedBlock.inner;\r\n\t\t\tconst wrapper = insertedBlock.wrapper;\r\n\r\n\t\t\tconst input = inner.querySelector('input');\r\n\t\t\tinput.addEventListener('focus', function(){\r\n\t\t\t\tinput.classList.add('focus-input');\r\n\t\t\t});\r\n\t\t\tinput.addEventListener('blur', function(){\r\n\t\t\t\tinput.classList.remove('focus-input');\r\n\t\t\t\tvalidValue(input);\r\n\t\t\t});\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок кнопки\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst buttonBlockTemplate = `<button id=\"{{id}}\" class=\"button-link {{classes}}\">{{name}}</button>`;\r\n\r\nexport type ButtonParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tclasses: string,\r\n\tname: string,\r\n\tonClick: (event: Event) => void\r\n}\r\n\r\nexport default class Button extends Block {\r\n\r\n\tconstructor(params: ButtonParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = buttonBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tconst insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tconst inner = insertedBlock.inner;\r\n\t\t\tconst wrapper = insertedBlock.wrapper;\r\n\t\t\tinner.addEventListener('click', this.props.onClick);\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок ошибки\r\n\r\nimport Block from '../elements/block';\r\n\r\n//<a class=\"warning-add warning-button\" href=\"chat.html\">Назад</a>-\r\n\r\nconst errorBlockTemplate = `\r\n\t<div class=\"warning-message-wrapper warning-on\">\r\n\t\t<div class=\"warning-message-table\">\r\n\t\t\t<div class=\"warning-message-block\">\r\n\t\t\t\t<div class=\"loader none-block\">//убрать none-block для показа</div>\r\n\t\t\t\t<div class=\"error-message warning-message\">\r\n\t\t\t\t\t<div class=\"error-message-header\">{{title}}</div>\r\n\t\t\t\t\t<span>{{errorText}}</span>\r\n\t\t\t\t\t<div class=\"warning-buttons-wrapper\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type ErrorParams = {\r\n\ttitle: string,\r\n\terrorText: string\r\n};\r\n\r\nexport default class Error extends Block {\r\n\r\n\tconstructor(params: ErrorParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = errorBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tconst insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tconst inner = insertedBlock.inner;\r\n\t\t\tconst wrapper = insertedBlock.wrapper;\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Страница ошибки\r\n\r\nimport Button, { ButtonParams } from '../elements/button-block';\r\nimport Error, { ErrorParams } from '../elements/error-block';\r\nimport authorization from './authorization';\r\n\r\nconst documentTitle = \"Ошибка\";\r\n\r\nconst errorBlock: ErrorParams = {\r\n\ttitle: 'Ошибка 404',\r\n\terrorText: 'Страница не найдена'\r\n};\r\n\r\nconst errorButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.warning-buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'warning-add warning-button',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\terrorBackFunction();\r\n\t\t},\r\n\t},\r\n];\r\n\r\nlet errorBackFunction = function(): void{\r\n\twindow.history.back();\r\n}\r\n\r\nexport function showError(InnerErrorParams: ErrorParams, innerBackFunction, innerErrorButtons: ButtonParams): void {\r\n\tif (!InnerErrorParams){\r\n\t\tInnerErrorParams = errorBlock;\r\n\t}\r\n\r\n\tif (!innerErrorButtons){\r\n\t\tinnerErrorButtons = errorButtons;\r\n\t}\r\n\tconsole.log(innerBackFunction)\r\n\tif (innerBackFunction){\r\n\t\terrorBackFunction = innerBackFunction;\r\n\t}\r\n\tconsole.log(errorBackFunction)\r\n\r\n\tdocument.title = documentTitle + ': ' + InnerErrorParams.title;\r\n\t//window.history.pushState('', '', 'error');\r\n\r\n\tnew Error(InnerErrorParams).insertBlock(\"#app\", true);\r\n\r\n\terrorButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}\r\n\r\nexport default function(): void {\r\n\tshowError(errorBlock, errorBackFunction, errorButtons);\t\r\n}","//Блок загрузки изображения\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst inputImageTemplate = `\r\n\t<label class=\"image-form-block\" for=\"{{id}}\">\r\n\t\t<input class=\"load-image\" hidden accept=\"image/*\" type=\"file\" id=\"{{id}}\">\r\n\t\t<img id=\"{{id}}\" src=\"{{imageLink}}\" alt=\"{{imageAlt}}\" title=\"{{imageTitle}}\">\r\n\t</label>`;\r\n\r\nexport type InputImageParams = {\r\n\telement: string,\r\n\tid: string,\r\n\timageLink: string,\r\n\timageAlt: string,\r\n\timageTitle: string,\r\n}\r\n\r\nexport default class ImageInput extends Block {\r\n\r\n\tconstructor(params: InputImageParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = inputImageTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tconst insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Страница профиля\r\n\r\nimport Form, { FormParams, onSubmitForm } from '../elements/form-block';\r\nimport Input, { InputParams } from '../elements/input-block';\r\nimport Button, { ButtonParams } from '../elements/button-block';\r\nimport ImageInput, { InputImageParams } from '../elements/image-input-block';\r\nimport chat from './chat';\r\n\r\nconst documentTitle = \"Мой профиль\";\r\n\r\nconst profileForm: FormParams = {\r\n\ttitle: ''\r\n};\r\n\r\nconst profileImageInputs: InputImageParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'photoImageUpload',\r\n\t\timageLink: '#',\r\n\t\timageAlt: '',\r\n\t\timageTitle: '',\r\n\t}\r\n];\r\n\r\nconst profileInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'email',\r\n\t\tname: 'email',\r\n\t\tlabel: 'E-mail',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Неверный формат email',\r\n\t\tvalidationType: 'email',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов',\r\n\t\tvalidationType: 'login',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'secondName',\r\n\t\tname: 'second_name',\r\n\t\tlabel: 'Фамилия',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'firstName',\r\n\t\tname: 'first_name',\r\n\t\tlabel: 'Имя',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'phone',\r\n\t\tname: 'phone',\r\n\t\tlabel: 'Телефон',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Телефон должен содержать от 10 до 15 символов, состоит из цифр, может начинаться с плюса',\r\n\t\tvalidationType: 'phone',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst changePasswordButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'changePasswordButton',\r\n\t\tname: 'Изменить пароль',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconst changePasswordButton = document.getElementById(event.target.getAttribute('id'));\r\n\t\t\tlet showElement = changePasswordButton.nextElementSibling;\r\n\r\n\t\t\twhile (showElement){\r\n\t\t\t\tshowElement.classList.remove(\"none-block\");\r\n\t\t\t\tshowElement = showElement.nextElementSibling;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst changePasswordInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'oldPassword',\r\n\t\tname: 'old_password',\r\n\t\tlabel: 'Старый пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'repeatPassword',\r\n\t\tname: 'repeat_password',\r\n\t\tlabel: 'Повторите пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n];\r\n\r\nconst profileButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Изменить данные',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm('.reg-form', function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tchat();\r\n\t\t},\r\n\t},\r\n];\r\n\r\nexport default function(): void {\r\n\r\n\tdocument.title = documentTitle;\r\n\twindow.history.pushState('', '', 'profile');\r\n\r\n\tnew Form(profileForm).insertBlock(\"#app\", true);\r\n\r\n\tprofileImageInputs.forEach(function(imageInput) {\r\n\t\tnew ImageInput(imageInput).insertBlock(imageInput.element);\r\n\t});\r\n\r\n\tprofileInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tchangePasswordButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n\r\n\tchangePasswordInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tprofileButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Страница регистрации\r\n\r\nimport Form, { FormParams, onSubmitForm } from '../elements/form-block';\r\nimport Input, { InputParams } from '../elements/input-block';\r\nimport Button, { ButtonParams } from '../elements/button-block';\r\nimport authorization from './authorization';\r\nimport chat from './chat';\r\n\r\nconst documentTitle = \"Регистрация\";\r\n\r\nconst registrationForm: FormParams = {\r\n\ttitle: 'Регистрация'\r\n};\r\n\r\nconst registrationInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'email',\r\n\t\tname: 'email',\r\n\t\tlabel: 'E-mail',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Неверный формат email',\r\n\t\tvalidationType: 'email',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов',\r\n\t\tvalidationType: 'login',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'secondName',\r\n\t\tname: 'second_name',\r\n\t\tlabel: 'Фамилия',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'firstName',\r\n\t\tname: 'first_name',\r\n\t\tlabel: 'Имя',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'phone',\r\n\t\tname: 'phone',\r\n\t\tlabel: 'Телефон',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Телефон должен содержать от 10 до 15 символов, состоит из цифр, может начинаться с плюса',\r\n\t\tvalidationType: 'phone',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'repeatPassword',\r\n\t\tname: 'repeat_password',\r\n\t\tlabel: 'Повторите пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst registrationButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Зарегистрироваться',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm('.reg-form', function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tauthorization();\r\n\t\t},\r\n\t},\r\n];\r\n\r\nexport default function(): void {\r\n\r\n\tdocument.title = documentTitle;\r\n\twindow.history.pushState('', '', 'registration');\r\n\r\n\tnew Form(registrationForm).insertBlock(\"#app\", true);\r\n\r\n\tregistrationInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tregistrationButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Страница авторизации\r\n\r\nimport Form, { FormParams, onSubmitForm } from '../elements/form-block';\r\nimport Input, { InputParams } from '../elements/input-block';\r\nimport Button, { ButtonParams } from '../elements/button-block';\r\nimport registration from './registration';\r\nimport chat from './chat';\r\n\r\nconst documentTitle = \"Вход\";\r\n\r\nconst authorizationForm: FormParams = {\r\n\ttitle: 'Вход',\r\n};\r\n\r\nconst authorizationInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Обязательное поле',\r\n\t\tvalidationType: '',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Обязательное поле',\r\n\t\tvalidationType: '',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst authorizationButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Авторизоваться',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm('.reg-form', function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\t\t\t\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Зарегистрироваться',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tregistration();\r\n\t\t},\r\n\t},\r\n];\r\n\r\nexport default function(): void {\r\n\r\n\tdocument.title = documentTitle;\r\n\twindow.history.pushState('', '', '/');\r\n\r\n\tnew Form(authorizationForm).insertBlock(\"#app\", true);\r\n\r\n\tauthorizationInputs.forEach(function(input) {\r\n\t\tnew Input(input, '').insertBlock(input.element);\r\n\t});\r\n\r\n\tauthorizationButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n\r\n\t\r\n}","import './scss/init.scss';\r\nimport authorization from './pages/authorization';\r\nimport chat from './pages/chat';\r\nimport registration from './pages/registration';\r\nimport profile from './pages/profile';\r\nimport error from './pages/error';\r\n\r\nfunction ready() {\r\n\tconst pathname = window.location.pathname;\r\n\tswitch(pathname) {\r\n\t\tcase '/': {\r\n\t\t\tauthorization();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '/chat': {\r\n\t\t\tchat();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '/registration': {\r\n\t\t\tregistration();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '/profile': {\r\n\t\t\tprofile();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:{\r\n\t\t\terror();\r\n\t\t}\r\n\t}\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', ready);\r\n"],"names":["$ea179994c2e62f0e$export$2e2bcd8739ae039","TEMPLATE_REGULAR","templateBlock","constructor","this","generateTemplate","template","changeTemplateKeys","tmp","templateRegular","templateKeys","exec","templateKey","templateValue","toString","replace","$520553f39a89de5b$export$5087227eb54526","listeners","on","event","callback","push","off","Error","filter","listener","emit","args","Event","forEach","$2f12cd551daa3e41$export$2e2bcd8739ae039","static","INIT","FLOW_CDM","FLOW_CDU","FLOW_RENDER","_element","params","noTagName","tagName","eventBus","_meta","props","_makePropsProxy","_registerEvents","EVENTS","init","bind","_componentDidMount","_componentDidUpdate","_render","_createResources","_createDocumentElement","componentDidMount","dispatchComponentDidMoun","oldProps","newProps","componentDidUpdate","setProps","nextProps","Object","assign","element","block","render","innerHTML","getContent","self","Proxy","get","target","property","set","value","deleteProperty","document","createElement","show","style","display","hide","insertBlock","clean","inner","wrapper","querySelector","children","el","querySelectorAll","removeAttribute","$c06e06c0e2a8e299$var$validationRegex","email","RegExp","login","name","phone","password","$c06e06c0e2a8e299$export$5ca26c99531348ec","input","validationType","getAttribute","errorText","regex","inputWrapper","parentElement","errorBlock","test","classList","add","textContent","remove","$160682af531b0660$export$2e2bcd8739ae039","super","insertedBlock","appendChild","form","formBlocks","infoBlock","isFormValid","repeatPassword","formBlock","contains","errorWrapper","addEventListener","$56aaf2b78fa10785$export$2e2bcd8739ae039","onClick","$880dd279761bf785$export$2e2bcd8739ae039","$ef2bdb53c468de7b$var$errorBlock","title","$ef2bdb53c468de7b$var$errorButtons","id","classes","preventDefault","$ef2bdb53c468de7b$var$errorBackFunction","window","history","back","$ef2bdb53c468de7b$export$3879b24e8245693d","InnerErrorParams","innerBackFunction","innerErrorButtons","console","log","$ef2bdb53c468de7b$var$documentTitle","button","$dfaf1c831bb1ea13$export$2e2bcd8739ae039","$3187ea00653b05f0$var$profileForm","$3187ea00653b05f0$var$profileImageInputs","imageLink","imageAlt","imageTitle","$3187ea00653b05f0$var$profileInputs","label","type","required","$3187ea00653b05f0$var$changePasswordButtons","showElement","getElementById","nextElementSibling","$3187ea00653b05f0$var$changePasswordInputs","$3187ea00653b05f0$var$profileButtons","$160682af531b0660$export$163d82ae5407ed7c","$02abb5fcca8ec534$exports","default","$3187ea00653b05f0$export$2e2bcd8739ae039","pushState","imageInput","$3b5868aba66e82f2$export$2e2bcd8739ae039","$fb81a59f87df34a9$var$registrationForm","$fb81a59f87df34a9$var$registrationInputs","$fb81a59f87df34a9$var$registrationButtons","$9d66ae0e255a5bf1$export$2e2bcd8739ae039","$fb81a59f87df34a9$export$2e2bcd8739ae039","$9d66ae0e255a5bf1$var$authorizationForm","$9d66ae0e255a5bf1$var$authorizationInputs","$9d66ae0e255a5bf1$var$authorizationButtons","location","pathname"],"version":3,"file":"index.2630cba2.js.map","sourceRoot":"../"}