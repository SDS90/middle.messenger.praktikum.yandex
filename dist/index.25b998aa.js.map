{"mappings":"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","sources":["src/utilities/TemplateGen.ts","src/utilities/eventbus.ts","src/elements/block.ts","src/utilities/validation.ts","src/elements/form-block.ts","src/elements/input-block.ts","src/elements/button-block.ts","src/elements/textarea-block.ts","src/elements/link-block.ts","src/elements/chat-wrapper.ts","src/elements/chat-block.ts","src/elements/message-block.ts","src/elements/modal-block.ts","src/elements/error-block.ts","src/pages/error.ts","src/elements/image-input-block.ts","src/pages/profile.ts","src/pages/chat.ts","src/pages/registration.ts","src/pages/authorization.ts","src/main.ts"],"sourcesContent":["//Генератор шаблонов\r\n//На вход подаётся строка с макросами в скобках {{}} и объект со значениями макросов\r\n//Пример:\r\n/*\r\n\tСтрока: '<div class=\"{{className}}\"></div>'\r\n\tОбъект: {className: 'test-class'}\r\n*/\r\n\r\nexport default class TemplateGen {\r\n\r\n\treadonly TEMPLATE_REGULAR = /\\{\\{(.*?)\\}\\}/;\r\n\r\n\treadonly templateBlock: string = \"\";\r\n\r\n\tconstructor(templateBlock: string) {\r\n\t\tthis.templateBlock = templateBlock\r\n\t}\r\n\r\n\tgenerateTemplate(template: Record<string, unknown>): string {\r\n\t\tif (template && this.templateBlock){\r\n\t\t\treturn this.changeTemplateKeys(template, this.templateBlock, this.TEMPLATE_REGULAR);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tchangeTemplateKeys(template, tmp, templateRegular): string {\r\n\t\tlet templateKeys = templateRegular.exec(tmp);\r\n\t\tif (templateKeys && templateKeys[1]){\r\n\t\t\tconst templateKey = templateKeys[1];\r\n\t\t\tfor (let key in template) {\r\n\t\t\t\tif (key == templateKeys[1]){\r\n\t\t\t\t\tlet templateValue = template[templateKey];\r\n\t\t\t\t\tif ((typeof templateValue != \"object\") && (typeof templateValue != \"function\")){\r\n\t\t\t\t\t\ttemplateValue = templateValue.toString()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttemplateValue = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttmp = tmp.replace(templateKeys[0], templateValue);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\tif (templateRegular.exec(tmp)){\r\n\t\t\treturn this.changeTemplateKeys(template, tmp, templateRegular);\r\n\t\t} else {\r\n\t\t\treturn tmp;\r\n\t\t}\r\n\t}\r\n}","//Шина событий\r\n\r\nexport class EventBus {\r\n  listeners: Record<string, Array<() => void>>\r\n\r\n  constructor() {\r\n    this.listeners = {};\r\n  }\r\n\r\n  on(event: string, callback:  () => void): void {\r\n    if (!this.listeners[event]) {\r\n      this.listeners[event] = [];\r\n    }\r\n    this.listeners[event].push(callback);\r\n  }\r\n\r\n  off(event: string, callback:  () => void): void {\r\n    if (!this.listeners[event]) {\r\n      throw new Error(`Нет события: ${event}`);\r\n    }\r\n\r\n    this.listeners[event] = this.listeners[event].filter(\r\n      listener => listener !== callback\r\n    );\r\n  }\r\n\r\n  emit(event: string, ...args: unknown[]) {\r\n    if (!this.listeners[event]) {\r\n      throw new Event(`Нет события: ${event}`);\r\n    }\r\n\r\n    this.listeners[event].forEach(function (listener: (...args: unknown[]) => void) {\r\n      listener(...args)\r\n    });\r\n  }\r\n}","//Блоки - общее\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport {EventBus} from '../utilities/eventbus';\r\n\r\ntype BlockMetaData = {\r\n\ttagName: string,\r\n\tprops: Record<string, unknown>\r\n}\r\n\r\nexport default class Block {\r\n\tstatic EVENTS = {\r\n\t\tINIT: \"init\",\r\n\t\tFLOW_CDM: \"flow:component-did-mount\",\r\n\t\tFLOW_CDU: \"flow:component-did-update\",\r\n\t\tFLOW_RENDER: \"flow:render\"\r\n\t};\r\n\r\n\ttemplate: string;\r\n\tprops: Record<string, unknown>;\r\n\teventBus: () => EventBus\r\n\r\n\t_element: null = null;\r\n\t_meta: BlockMetaData\r\n\r\n\t/** JSDoc\r\n\t\t* @param {string} tagName\r\n\t\t* @param {Object} props\r\n\t\t*\r\n\t\t* @returns {void}\r\n\t*/\r\n\r\n\tconstructor(params: Record<string, unknown>, template: string, tagName = 'div') {\r\n\t\tthis.template = template;\r\n\t    const eventBus = new EventBus();\r\n\t    this._meta  = {\r\n\t    \ttagName,\r\n\t    \tparams\r\n\t    };\r\n\r\n\t    this.props = this._makePropsProxy(params);\r\n\r\n\t    this.eventBus = () => eventBus;\r\n\r\n\t    this._registerEvents(eventBus);\r\n\t    eventBus.emit(Block.EVENTS.INIT);\r\n\t}\r\n\r\n\t_registerEvents(eventBus) {\r\n\t\teventBus.on(Block.EVENTS.INIT, this.init.bind(this));\r\n\t\teventBus.on(Block.EVENTS.FLOW_CDM, this._componentDidMount.bind(this));\r\n\t\teventBus.on(Block.EVENTS.FLOW_CDU, this._componentDidUpdate.bind(this));\r\n\t\teventBus.on(Block.EVENTS.FLOW_RENDER, this._render.bind(this));\r\n\t}\r\n\r\n\t_createResources() {\r\n\t\tconst { tagName } = this._meta;\r\n\t\tthis._element = this._createDocumentElement(tagName);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis._createResources();\r\n\t\tthis.eventBus().emit(Block.EVENTS.FLOW_CDM);\r\n\t}\r\n\r\n\t_componentDidMount() {\r\n\t\tthis.componentDidMount();\r\n\t\tthis.eventBus().emit(Block.EVENTS.FLOW_RENDER);\r\n\t}\r\n\r\n\t// Может переопределять пользователь, необязательно трогать\r\n\tcomponentDidMount() {\r\n\r\n\t}\r\n\r\n\tdispatchComponentDidMoun() {}\r\n\r\n\t_componentDidUpdate(oldProps, newProps) {\r\n\t\tconst response = this.componentDidUpdate(oldProps, newProps);\r\n\t\tif (!response) {\r\n\t\t\treturn;\r\n\t    }\r\n\t\tthis._render();\r\n\t}\r\n\r\n\t// Может переопределять пользователь, необязательно трогать\r\n\tcomponentDidUpdate(oldProps, newProps) {\r\n\t\tlet oldPropsString = JSON.stringify(oldProps);\r\n\t\tlet newPropsString = JSON.stringify(newProps);\r\n\t\tif (oldPropsString == newProps){\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsetProps = nextProps => {\r\n\t\tif (!nextProps) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tObject.assign(this.props, nextProps);\r\n\t};\r\n\r\n\tget element() {\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t_render() {\r\n\t\tconst block = this.render();\r\n\t    // Этот небезопасный метод для упрощения логики\r\n\t    // Используйте шаблонизатор из npm или напишите свой безопасный\r\n\t    // Нужно не в строку компилировать (или делать это правильно),\r\n\t    // либо сразу в DOM-элементы возвращать из compile DOM-ноду\r\n\t    if (this._element){\r\n\t    \tconsole.log(this._element)\r\n\t    \tthis._element.innerHTML = block;\r\n\t    }\r\n\t}\r\n\r\n\t// Может переопределять пользователь, необязательно трогать\r\n\trender(): string {\r\n\t\treturn new TemplateGen(this.template).generateTemplate(this.props);\r\n\t}\r\n\r\n\tgetContent(): HTMLElement | null {\r\n\t\treturn this.element;\r\n\t}\r\n\r\n\t_makePropsProxy(props) {\r\n\t\t// Можно и так передать this\r\n\t\t// Такой способ больше не применяется с приходом ES6+\r\n\t\tconst self = this;\r\n\r\n\t\treturn new Proxy(props, {\r\n\t\t\tget(target, property) {\r\n\t\t\t\tif (typeof target[property] == 'function'){\r\n\t\t\t\t\treturn target[property].bind(target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn target[property];\r\n\t\t\t\t}  \r\n\t\t\t},\r\n\t\t\tset(target, property, value) {\r\n\t\t\t\ttarget[property] = value;\r\n\t\t\t\tself.eventBus().emit(Block.EVENTS.FLOW_CDU, {...target}, target);\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tdeleteProperty(target, property) {\r\n\t\t\t\tthrow new Error(\"Нет доступа\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t_createDocumentElement(tagName): HTMLElement {\r\n\t\t// Можно сделать метод, который через фрагменты в цикле создаёт сразу несколько блоков\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n\r\n\tshow(): void {\r\n\t\tlet element = this.getContent();\r\n\t\tif (element){\r\n\t\t\telement.style.display = \"block\";\r\n\t\t}\t\t\r\n\t}\r\n\r\n\thide(): void {\r\n\t\tlet element = this.getContent();\r\n\t\tif (element){\r\n\t\t\telement.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tconst inner = this.getContent(); //new DOMParser().parseFromString(new TemplateGen(this.template).generateTemplate(this.props), \"text/html\").getElementsByTagName(\"body\")[0].childNodes[0];\r\n\t\tconst wrapper = document.querySelector(element);\r\n\t\tif (!inner || !wrapper) return {};\r\n\t\tfor (let key in this.props){\r\n\t\t\tif (!this.props[key]){\r\n\t\t\t\tconsole.log(typeof inner.childNodes)\r\n\t\t\t\tif(inner.childNodes[0]){\r\n\t\t\t\t\t//inner.childNodes[0].removeAttribute(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (clean){\r\n\t\t\twrapper.innerHTML = \"\";\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tinner: inner,\r\n\t\t\twrapper: wrapper\r\n\t\t}\r\n\t}\r\n}","//Валидация\r\n\r\nconst defaultValidationErrorMessage = \"Возникла ошибка при заполнении формы. Пожалуйста, проверьте введённые данные.\";\r\nconst repeatPasswordErrorMessage = \"Пароли не совпадают.\";\r\nconst requiredFieldsErrorMessage = \"Не все обязательные поля заполнены.\";\r\n\r\nconst validationRegex: Record<string, RegExp> = {\r\n\temail: new RegExp(/^([A-Za-z0-9_\\.-]+)@([A-Za-z0-9_\\.-]+)\\.([a-z\\.]{2,6})$/),\r\n\tlogin: new RegExp(/^[A-Za-z0-9_\\.-]{3,20}$/),\r\n\tname: new RegExp(/^[A-ZА-Я][a-zA-Zа-яА-Я-]+$/),\r\n\tphone: new RegExp(/^\\+?\\d{10,15}$/),\r\n\tpassword: new RegExp(/^((?=.*?[A-Z])(?=.*?[0-9])\\S{8,40})\\S$/),\r\n};\r\n\r\nexport const validValue = function(input: HTMLInputElement): boolean {\r\n\tconst validationType = input.getAttribute(\"data-validation-type\");\r\n\tconst errorText = input.getAttribute(\"data-error-text\");\r\n\r\n\tconst value = input.value;\r\n\tconst regex = validationRegex[validationType];\r\n\r\n\tconst inputWrapper = input.parentElement;\r\n\tconst errorBlock = inputWrapper.querySelector(\".error-text-block\");\r\n\r\n\tif (regex && !regex.test(value)) {\r\n\t\tinputWrapper.classList.add('error-input');\r\n\t\tif (errorBlock){\r\n\t\t\tif (errorText){\r\n\t\t\t\terrorBlock.textContent = errorText;\r\n\t\t\t} else {\r\n\t\t\t\terrorBlock.textContent = defaultValidationErrorMessage;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\treturn false;\r\n\t}\r\n\tinputWrapper.classList.remove('error-input');\r\n\tif (errorBlock){\r\n\t\terrorBlock.textContent = \"\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport const validForm = function(form: HTMLFormElement): boolean {\r\n\tconst formBlocks = form.querySelectorAll('.form-block');\r\n\tconst infoBlock = form.querySelector(\".info-block\");\r\n\r\n\tlet isFormValid = true;\r\n\tlet password = \"\", repeatPassword = \"\";\r\n\r\n\tif (infoBlock){\r\n\t\tinfoBlock.textContent = \"\";\r\n\t}\r\n\r\n\tformBlocks.forEach(function(formBlock) {\r\n\t\tlet input = formBlock.querySelector(\"input\") || formBlock.querySelector(\"textarea\");\r\n\t\tif (input){\r\n\t\t\tif (!formBlock.classList.contains(\"none-block\") && !validValue(input)) {\r\n\t\t\t\tisFormValid = false;\r\n\t\t\t}\r\n\t\t\tif (!input.value && input.getAttribute(\"data-required\") && !formBlock.classList.contains(\"none-block\")){\r\n\t\t\t\tisFormValid = false;\r\n\t\t\t\tif (infoBlock){\r\n\t\t\t\t\tinfoBlock.textContent = requiredFieldsErrorMessage;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (input.name == \"password\"){\r\n\t\t\t\tpassword = input.value;\r\n\t\t\t}\r\n\t\t\tif (input.name == \"repeat_password\"){\r\n\t\t\t\trepeatPassword = input.value;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\tif (password && repeatPassword && (password != repeatPassword)){\r\n\t\tisFormValid = false;\r\n\t\tinfoBlock.textContent = repeatPasswordErrorMessage;\r\n\t}\t\r\n\treturn isFormValid;\r\n}","//Блок input\r\n\r\nimport Block from '../elements/block';\r\nimport {validForm} from \"../utilities/validation\";\r\n\r\nconst formBlockTemplate = `\r\n\t<div class=\"reg-form-page\">\r\n\t\t<div class=\"reg-form-wrapper\">\r\n\t\t\t<h2>{{title}}</h2>\r\n\t\t\t<form class=\"reg-form\">\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<div class=\"reg-form-fieldset\"></div>\r\n\t\t\t\t\t<div class=\"form-block info-block\"></div>\r\n\t\t\t\t\t<div class=\"form-block buttons-wrapper\"></div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type FormParams = {\r\n\ttitle: string\r\n};\r\n\r\nexport default class Form extends Block {\r\n\r\n\tconstructor(params: FormParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = formBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}\r\n\r\nexport function onSubmitForm(selector: string, callback): void {\r\n\tconst form: HTMLFormElement  = document.querySelector(selector);\r\n\tif (!form) return\r\n\r\n\tif (validForm(form)){\r\n\t\tconst data: FormData = new FormData(form);\r\n\t\tconsole.log(...data);\r\n\t\tif (callback){\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\treturn;\r\n}","//Блок input\r\n\r\nimport Block from '../elements/block';\r\nimport {validValue} from \"../utilities/validation\";\r\n\r\nconst inputBlockTemplate = `\r\n\t<div class=\"form-block {{classList}}\">\r\n\t\t<label class=\"form-label\" for=\"{{id}}\">{{label}}</label>\r\n\t\t<div class=\"input-wrapper\">\r\n\t\t\t<input class=\"form-control input-styles\" data-required=\"{{required}}\" data-error-text=\"{{errorText}}\" data-validation-type=\"{{validationType}}\" id=\"{{id}}\" type=\"{{type}}\" value=\"{{value}}\" name=\"{{name}}\">\r\n\t\t\t<div class=\"error-text-block\"></div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type InputParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tlabel: string,\r\n\tvalue: string,\r\n\ttype: string,\r\n\tname: string,\r\n\trequired: boolean,\r\n\terrorText: string,\r\n\tvalidationType: string,\r\n\tclassList: string,\r\n}\r\n\r\nexport default class Input extends Block {\r\n\t//params: InputParams\r\n\r\n\tconstructor(params: InputParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = inputBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\r\n\t\t\tlet input = inner.querySelector('input')\r\n\t\t\tinput.addEventListener('focus', function(){\r\n\t\t\t\tinput.classList.add('focus-input');\r\n\t\t\t});\r\n\t\t\tinput.addEventListener('blur', function(){\r\n\t\t\t\tinput.classList.remove('focus-input');\r\n\t\t\t\tvalidValue(input);\r\n\t\t\t});\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок кнопки\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst buttonBlockTemplate = `<button id=\"{{id}}\" class=\"button-link {{classes}}\">{{name}}</button>`;\r\n\r\nexport type ButtonParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tclasses: string,\r\n\tname: string,\r\n\tonClick: (event: Event) => void\r\n}\r\n\r\nexport default class Button extends Block {\r\n\r\n\tconstructor(params: ButtonParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = buttonBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\tinner.addEventListener('click', this.props.onClick);\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок textarea\r\n\r\nimport Block from '../elements/block';\r\nimport {validValue} from \"../utilities/validation\";\r\n\r\nconst textareaBlockTemplate = `\r\n\t<div class=\"form-block\">\r\n\t\t<textarea id=\"{{id}}\"  data-required=\"{{required}}\" name=\"{{name}}\"></textarea>\r\n\t</div>\r\n\t`;\r\n\r\nexport type TextareaParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tname: string,\r\n\trequired: boolean,\r\n}\r\n\r\nexport default class Textarea extends Block {\r\n\t//params: InputParams\r\n\r\n\tconstructor(params: TextareaParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = textareaBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\r\n\t\t\tlet textarea = inner.querySelector('textarea')\r\n\t\t\ttextarea.addEventListener('focus', function(){\r\n\t\t\t\ttextarea.classList.add('focus-input');\r\n\t\t\t});\r\n\t\t\ttextarea.addEventListener('blur', function(){\r\n\t\t\t\ttextarea.classList.remove('focus-input');\r\n\t\t\t\t//validValue(input);\r\n\t\t\t});\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок ссылки\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst linkBlockTemplate = `<a id=\"{{id}}\" class=\"{{classes}}\" href=\"{{href}}\">{{name}}</a>`;\r\n\r\nexport type LinkParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tclasses: string,\r\n\tname: string,\r\n\thref: string,\r\n\tonClick: (event: Event) => void\r\n}\r\n\r\nexport default class Link extends Block {\r\n\r\n\tconstructor(params: LinkParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = linkBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\tinner.addEventListener('click', this.props.onClick);\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок чата (общий)\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst chatWrapperTemplate = `\r\n\t<div class=\"chat-form-page clear\">\r\n\t\t<div class=\"chat-list-column\">\r\n\t\t\t<div class=\"profile-block clear\"></div>\r\n\t\t\t<!--<form class=\"search-wrapper\">\r\n\t\t\t\t<input class=\"input-styles search-input\" type=\"text\" placeholder=\"Поиск\" name=\"search\">\r\n\t\t\t</form> -->\r\n\t\t\t<div class=\"chat-list\"></div>\r\n\t\t</div>\r\n\t\t<div class=\"chat-full-block\">\r\n\t\t\t<div class=\"chat-full-name\">{{chatUserName}}</div>\r\n\t\t\t<div class=\"select-chat-wrapper\" id=\"selectChat\">\r\n\t\t\t\t<div class=\"select-chat-cell\">\r\n\t\t\t\t\t<span>Выберите чат</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"chat-wrapper\"></div>\r\n\t\t</div>\r\n\t</div>\r\n\t`;\r\n\r\nexport type ChatParams = {\r\n\tchatUserName: string\r\n};\r\n\r\nexport default class Chat extends Block {\r\n\r\n\tconstructor(params: ChatParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = chatWrapperTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок чата (пользователь)\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst chatBlockTemplate = `\r\n\t<div class=\"chat-block\" id=\"{{id}}\">\r\n\t\t<div class=\"chat-photo-wrapper\">\r\n\t\t\t<img class=\"chat-photo\" src=\"{{photoLink}}\" alt=\"{{photoAlt}}\">\r\n\t\t</div>\r\n\t\t<div class=\"chat-name\">{{name}}</div>\r\n\t\t<div class=\"chat-preview-text\">\r\n\t\t\t<strong class=\"{{fromMeHideClass}}\">Вы: </strong>\r\n\t\t\t<span>{{text}}</span>\r\n\t\t</div>\r\n\t\t<div class=\"chat-time\">{{time}}</div>\r\n\t\t<div class=\"new-messages-info {{newMessageHideClass}}\">{{newMessageCount}}</div>\r\n\t\t<a class=\"delete-chat-button\" href=\"#\">X</a>\r\n\t</div>`;\r\n\r\nexport type ChatBlockParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tphotoLink: string,\r\n\tphotoAlt: string,\r\n\tname: string,\r\n\tfromMeHideClass: string,\r\n\ttext: string,\r\n\ttime: string,\r\n\tnewMessageHideClass: string,\r\n\tnewMessageCount: number,\r\n\tonClick: (event: Event) => void\r\n};\r\n\r\nexport default class ChatBlock extends Block {\r\n\r\n\tconstructor(params: ChatBlockParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = chatBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\tinner.addEventListener('click', this.props.onClick);\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок сообщения\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst messageBlockTemplate = `\r\n\t<div class=\"chat-message-wrapper {{toMeClass}}\">\r\n\t\t<div class=\"chat-message-block\">\r\n\t\t\t<div class=\"chat-message-time\">{{time}}</div>\r\n\t\t\t<div>\r\n\t\t\t\t{{text}}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type MessageBlockParams = {\r\n\telement: string,\r\n\ttoMeClass: string, //message-to-me\r\n\ttext: string,\r\n\ttime: string,\r\n};\r\n\r\nexport default class MessageBlock extends Block {\r\n\r\n\tconstructor(params: MessageBlockParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = messageBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\twrapper.prepend(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок модального окна\r\n\r\nimport Block from '../elements/block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\n\r\nconst modalTemplate = `\r\n\t<div class=\"warning-message-wrapper warning-on\" id=\"{{id}}\">\r\n\t\t<div class=\"warning-message-table\">\r\n\t\t\t<div class=\"warning-message-block\">\r\n\t\t\t\t<div class=\"warning-message\">\r\n\t\t\t\t\t\t<span>{{MessageText}}</span>\r\n\t\t\t\t\t\t<!--<div class=\"form-block\">\r\n\t\t\t\t\t\t\t<label>Логин</label>\r\n\t\t\t\t\t\t\t<div class=\"input-wrapper\">\r\n\t\t\t\t\t\t\t\t<input class=\"form-control input-styles\" type=\"text\">\r\n\t\t\t\t\t\t\t\t<div class=\"error-text-block none-block\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t<div class=\"warning-buttons-wrapper\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type ModalParams = {\r\n\telement: string,\r\n\tid: string,\r\n\tMessageText: string,\r\n};\r\n\r\nexport default class Modal extends Block {\r\n\r\n\tconstructor(params: ModalParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = modalTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Блок ошибки\r\n\r\nimport Block from '../elements/block';\r\n\r\n//<a class=\"warning-add warning-button\" href=\"chat.html\">Назад</a>-\r\n\r\nconst errorBlockTemplate = `\r\n\t<div class=\"warning-message-wrapper warning-on\">\r\n\t\t<div class=\"warning-message-table\">\r\n\t\t\t<div class=\"warning-message-block\">\r\n\t\t\t\t<div class=\"loader none-block\">//убрать none-block для показа</div>\r\n\t\t\t\t<div class=\"error-message warning-message\">\r\n\t\t\t\t\t<div class=\"error-message-header\">{{title}}</div>\r\n\t\t\t\t\t<span>{{errorText}}</span>\r\n\t\t\t\t\t<div class=\"warning-buttons-wrapper\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>`;\r\n\r\nexport type ErrorParams = {\r\n\ttitle: string,\r\n\terrorText: string\r\n};\r\n\r\nexport default class Error extends Block {\r\n\r\n\tconstructor(params: ErrorParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = errorBlockTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tlet inner = insertedBlock.inner;\r\n\t\t\tlet wrapper = insertedBlock.wrapper;\r\n\t\t\twrapper.appendChild(inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Страница ошибки\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport Error, { ErrorParams }  from '../elements/error-block';\r\nimport authorization from './authorization';\r\n\r\nconst documentTitle: string = \"Ошибка\"\r\n\r\nconst errorBlock: ErrorParams = {\r\n\ttitle: 'Ошибка 404',\r\n\terrorText: 'Страница не найдена'\r\n};\r\n\r\nconst errorButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.warning-buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'warning-add warning-button',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tauthorization(); //Пока на страницу авторизации\r\n\t\t},\r\n\t},\r\n];\r\n\r\nexport function showError(ErrorParams: ErrorParams, errorButtons: errorButtons): void {\r\n\tdocument.title = documentTitle;\r\n\r\n\tnew Error(errorBlock).insertBlock(\"#app\", true);\r\n\r\n\terrorButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}\r\n\r\nexport default function(): void {\r\n\tshowError(errorBlock, errorButtons);\t\r\n}","//Блок загрузки изображения\r\n\r\nimport Block from '../elements/block';\r\n\r\nconst inputImageTemplate = `\r\n\t<label class=\"image-form-block\" for=\"{{id}}\">\r\n\t\t<input class=\"load-image\" hidden accept=\"image/*\" type=\"file\" id=\"{{id}}\">\r\n\t\t<img id=\"{{id}}\" src=\"{{imageLink}}\" alt=\"{{imageAlt}}\" title=\"{{imageTitle}}\">\r\n\t</label>`;\r\n\r\nexport type InputImageParams = {\r\n\telement: string,\r\n\tid: string,\r\n\timageLink: string,\r\n\timageAlt: string,\r\n\timageTitle: string,\r\n}\r\n\r\nexport default class ImageInput extends Block {\r\n\r\n\tconstructor(params: InputImageParams, template: string) {\r\n\t\tif (!template){\r\n\t\t\ttemplate = inputImageTemplate;\r\n\t\t}\r\n\t\tsuper(params, template);\r\n\t}\r\n\r\n\tinsertBlock(element: string, clean: boolean): Record<string, HTMLElement> {\r\n\t\tlet insertedBlock = super.insertBlock(element, clean);\r\n\t\tif (insertedBlock.inner && insertedBlock.wrapper){\r\n\t\t\tinsertedBlock.wrapper.appendChild(insertedBlock.inner);\r\n\t\t}\r\n\t\treturn insertedBlock;\r\n\t}\r\n}","//Страница профиля\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport ImageInput, { InputImageParams }  from '../elements/image-input-block';\r\nimport authorization from './authorization';\r\nimport chat from './chat';\r\n\r\nconst documentTitle: string = \"Мой профиль\"\r\n\r\nconst profileForm: FormParams = {\r\n\ttitle: ''\r\n};\r\n\r\nconst profileImageInputs: InputImageParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'photoImageUpload',\r\n\t\timageLink: '#',\r\n\t\timageAlt: '',\r\n\t\timageTitle: '',\r\n\t}\r\n];\r\n\r\nconst profileInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'email',\r\n\t\tname: 'email',\r\n\t\tlabel: 'E-mail',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Неверный формат email',\r\n\t\tvalidationType: 'email',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов',\r\n\t\tvalidationType: 'login',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'secondName',\r\n\t\tname: 'second_name',\r\n\t\tlabel: 'Фамилия',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'firstName',\r\n\t\tname: 'first_name',\r\n\t\tlabel: 'Имя',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'phone',\r\n\t\tname: 'phone',\r\n\t\tlabel: 'Телефон',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Телефон должен содержать от 10 до 15 символов, состоит из цифр, может начинаться с плюса',\r\n\t\tvalidationType: 'phone',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst changePasswordButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'changePasswordButton',\r\n\t\tname: 'Изменить пароль',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tconst changePasswordButton = document.getElementById(event.target.getAttribute('id'));\r\n\t\t\tlet showElement = changePasswordButton.nextElementSibling;\r\n\r\n\t\t\twhile (showElement){\r\n\t\t\t\tshowElement.classList.remove(\"none-block\");\r\n\t\t\t\tshowElement = showElement.nextElementSibling;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst changePasswordInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'oldPassword',\r\n\t\tname: 'old_password',\r\n\t\tlabel: 'Старый пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'repeatPassword',\r\n\t\tname: 'repeat_password',\r\n\t\tlabel: 'Повторите пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: 'none-block',\r\n\t},\r\n];\r\n\r\nconst profileButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Изменить данные',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm('.reg-form', function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tchat();\r\n\t\t},\r\n\t},\r\n]\r\n\r\nexport default function(): void {\r\n\r\n\tdocument.title = documentTitle;\r\n\r\n\tnew Form(profileForm).insertBlock(\"#app\", true);\r\n\r\n\tprofileImageInputs.forEach(function(imageInput) {\r\n\t\tnew ImageInput(imageInput).insertBlock(imageInput.element);\r\n\t});\r\n\r\n\tprofileInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tchangePasswordButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n\r\n\tchangePasswordInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tprofileButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Страница чата\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Textarea, { TextareaParams }  from '../elements/textarea-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport Link, { LinkParams }  from '../elements/link-block';\r\nimport Chat, { ChatParams }  from '../elements/chat-wrapper';\r\nimport ChatBlock, { ChatBlockParams }  from '../elements/chat-block';\r\nimport MessageBlock, { MessageBlockParams }  from '../elements/message-block';\r\nimport Modal, { ModalParams }  from '../elements/modal-block';\r\nimport registration from './registration';\r\nimport authorization from './authorization';\r\nimport error, {showError} from './error';\r\nimport profile from './profile';\r\n\r\nconst documentTitle: string = \"Чат\"\r\n\r\nconst chatParams: ChatParams = {\r\n\tchatUserName: 'Андрей Андрейченков',\r\n}\r\n\r\nconst sendForm: FormParams = {\r\n\ttitle: ''\r\n};\r\n\r\nconst sendButton: ButtonParams = {\r\n\telement: '.chat-send-box',\r\n\tid: '',\r\n\tname: ' >',\r\n\tclasses: 'chat-send-button',\r\n\tonClick: (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tonSubmitForm('.chat-send-box', function(){\r\n\t\t\tdocument.getElementById(\"chatSendBox\").value = \"\";\r\n\t\t});\r\n\t},\r\n}\r\n\r\nconst addFileButton: ButtonParams = {\r\n\telement: '.chat-send-box',\r\n\tid: 'addFileToMessage',\r\n\tname: '📎',\r\n\tclasses: 'add-file-button',\r\n\tonClick: (event) => {},\r\n}\r\n\r\nconst chatProfileLinks: LinkParams[] = [\r\n\t{\r\n\t\telement: '.profile-block',\r\n\t\tid: '',\r\n\t\tclasses: 'create-chat-link',\r\n\t\tname: 'Создать чат',\r\n\t\thref: '#',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\terror(); //в дальнейшем использовать showError с передачей параметров ошибки\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.profile-block',\r\n\t\tid: '',\r\n\t\tclasses: 'profile-link',\r\n\t\tname: 'Мой профиль &gt;',\r\n\t\thref: '#',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tprofile();\t\t\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.chat-full-name',\r\n\t\tid: '',\r\n\t\tclasses: 'chat-back-button',\r\n\t\tname: 'Выход',\r\n\t\thref: '#',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tauthorization();\t\t\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst chatList: ChatBlockParams[] = [\r\n\t{\r\n\t\telement: '.chat-list',\r\n\t\tid: '1',\r\n\t\tphotoLink: '',\r\n\t\tname: 'Андрей Андрейченков',\r\n\t\tphotoAlt: '',\r\n\t\tfromMeHideClass: 'none-block',\r\n\t\ttext: 'Круто!',\r\n\t\ttime: '15.04.2022 15:31',\r\n\t\tnewMessageHideClass: '',\r\n\t\tnewMessageCount: 10,\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonChatClick(event);\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.chat-list',\r\n\t\tid: '2',\r\n\t\tphotoLink: '',\r\n\t\tname: 'Михалыч',\r\n\t\tphotoAlt: '',\r\n\t\tfromMeHideClass: '',\r\n\t\ttext: 'Отлично!',\r\n\t\ttime: '15.04.2022 15:31',\r\n\t\tnewMessageHideClass: 'none-block',\r\n\t\tnewMessageCount: 0,\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonChatClick(event);\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst messageList: MessageBlockParams[] = [\r\n\t{\r\n\t\telement: '.chat-wrapper',\r\n\t\ttoMeClass: 'message-to-me',\r\n\t\ttext: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur  Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n\t\ttime: '15.04.2022 12:37',\r\n\t},\r\n\t{\r\n\t\telement: '.chat-wrapper',\r\n\t\ttoMeClass: 'message-to-me',\r\n\t\ttext: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur  Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n\t\ttime: '15.04.2022 12:37',\r\n\t},\r\n\t{\r\n\t\telement: '.chat-wrapper',\r\n\t\ttoMeClass: '',\r\n\t\ttext: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur  Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n\t\ttime: '15.04.2022 12:37',\r\n\t},\r\n];\r\n\r\nconst textareaParams: TextareaParams = {\r\n\telement: '.chat-send-box',\r\n\tid: 'chatSendBox',\r\n\tname: 'message',\r\n\trequired: true,\r\n}\r\n\r\nconst deleteWarningMessage: ModalParams = {\r\n\telement: '#app',\r\n\tid: 'deleteWarningMessage',\r\n\tMessageText: 'Вы действительно хотите удалить этот чат?',\r\n}\r\n\r\nconst deleteButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.warning-buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Да',\r\n\t\tclasses: 'warning-add warning-button',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\t//Вызывать удаление\r\n\t\t\tdocument.getElementById(\"deleteWarningMessage\").remove();\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.warning-buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Нет',\r\n\t\tclasses: 'warning-back warning-button',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdocument.getElementById(\"deleteWarningMessage\").remove();\r\n\t\t},\r\n\t},\r\n]\r\n\r\nfunction onChatClick(event){\r\n\tif (event.target.classList.contains(\"delete-chat-button\")){\r\n\t\tnew Modal(deleteWarningMessage).insertBlock(\"#app\");\r\n\t\tdeleteButtons.forEach(function(button) {\r\n\t\t\tnew Button(button, '').insertBlock(button.element);\r\n\t\t});\r\n\t} else {\r\n\t\tdocument.getElementById(\"selectChat\").classList.add(\"none-block\");\r\n\t\tmessageList.forEach(function(message){\r\n\t\t\tnew MessageBlock(message, '').insertBlock(message.element);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default function(): void {\r\n\r\n\tdocument.title = documentTitle;\r\n\tnew Chat(chatParams).insertBlock(\"#app\", true);\r\n\r\n\tchatProfileLinks.forEach(function(link) {\r\n\t\tnew Link(link, '').insertBlock(link.element);\r\n\t});\r\n\r\n\tchatList.forEach(function(chat){\r\n\t\tnew ChatBlock(chat, '').insertBlock(chat.element);\r\n\t});\r\n\r\n\t\r\n\tnew Form(sendForm, '<form class=\"chat-send-box\"></form>').insertBlock(\".chat-full-block\");\r\n\tnew Button(sendButton).insertBlock(\".chat-send-box\");\r\n\tnew Button(addFileButton, '<label for=\"{{id}}\" class=\"button-link {{classes}}\">{{name}}<input class=\"load-image\" hidden accept=\"image/*\" type=\"file\" id=\"{{id}}\"></label>').insertBlock(\".chat-send-box\");\r\n\r\n\tnew Textarea(textareaParams).insertBlock(\".chat-send-box\");\r\n}","//Страница регистрации\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport authorization from './authorization';\r\nimport chat from './chat';\r\n\r\nconst documentTitle: string = \"Регистрация\"\r\n\r\nconst registrationForm: FormParams = {\r\n\ttitle: 'Регистрация'\r\n}\r\n\r\nconst registrationInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'email',\r\n\t\tname: 'email',\r\n\t\tlabel: 'E-mail',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Неверный формат email',\r\n\t\tvalidationType: 'email',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Логин должен содержать от 3 до 20 латинских символов, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов',\r\n\t\tvalidationType: 'login',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'secondName',\r\n\t\tname: 'second_name',\r\n\t\tlabel: 'Фамилия',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'firstName',\r\n\t\tname: 'first_name',\r\n\t\tlabel: 'Имя',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Первая буква должна быть заглавной, без пробелов, цифр и спецсимволов, кроме дефиса',\r\n\t\tvalidationType: 'name',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'phone',\r\n\t\tname: 'phone',\r\n\t\tlabel: 'Телефон',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: 'Телефон должен содержать от 10 до 15 символов, состоит из цифр, может начинаться с плюса',\r\n\t\tvalidationType: 'phone',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'repeatPassword',\r\n\t\tname: 'repeat_password',\r\n\t\tlabel: 'Повторите пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: 'Пароль должен содержать от 8 до 40 символов, обязательно хотя бы одну заглавную букву и цифру',\r\n\t\tvalidationType: 'password',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst registrationButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Зарегистрироваться',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm('.reg-form', function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Назад',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tauthorization();\r\n\t\t},\r\n\t},\r\n]\r\n\r\nexport default function(): void {\r\n\r\n\tdocument.title = documentTitle;\r\n\r\n\tnew Form(registrationForm).insertBlock(\"#app\", true);\r\n\r\n\tregistrationInputs.forEach(function(input) {\r\n\t\tnew Input(input).insertBlock(input.element);\r\n\t});\r\n\r\n\tregistrationButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","//Страница авторизации\r\n\r\nimport TemplateGen from '../utilities/TemplateGen';\r\nimport Form, { FormParams, onSubmitForm }  from '../elements/form-block';\r\nimport Input, { InputParams }  from '../elements/input-block';\r\nimport Button, { ButtonParams }  from '../elements/button-block';\r\nimport registration from './registration';\r\nimport chat from './chat';\r\n\r\nconst documentTitle: string = \"Вход\"\r\n\r\nconst authorizationForm: FormParams = {\r\n\ttitle: 'Вход',\r\n}\r\n\r\nconst authorizationInputs: InputParams[] = [\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'login',\r\n\t\tname: 'login',\r\n\t\tlabel: 'Логин',\r\n\t\tvalue: '',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\terrorText: '',\r\n\t\tvalidationType: '',\r\n\t\tclassList: '',\r\n\t},\r\n\t{\r\n\t\telement: '.reg-form-fieldset',\r\n\t\tid: 'password',\r\n\t\tname: 'password',\r\n\t\tlabel: 'Пароль',\r\n\t\tvalue: '',\r\n\t\ttype: 'password',\r\n\t\trequired: true,\r\n\t\terrorText: '',\r\n\t\tvalidationType: '',\r\n\t\tclassList: '',\r\n\t},\r\n];\r\n\r\nconst authorizationButtons: ButtonParams[] = [\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Авторизоваться',\r\n\t\tclasses: 'add-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tonSubmitForm('.reg-form', function(){\r\n\t\t\t\tchat();\r\n\t\t\t});\t\t\t\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\telement: '.buttons-wrapper',\r\n\t\tid: '',\r\n\t\tname: 'Зарегистрироваться',\r\n\t\tclasses: 'reg-link',\r\n\t\tonClick: (event) => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tregistration();\r\n\t\t\t//profile();\r\n\t\t},\r\n\t},\r\n]\r\n\r\nexport default function(): void {\r\n\r\n\tdocument.title = documentTitle;\r\n\r\n\tnew Form(authorizationForm).insertBlock(\"#app\", true);\r\n\r\n\tauthorizationInputs.forEach(function(input) {\r\n\t\tnew Input(input, '').insertBlock(input.element);\r\n\t});\r\n\r\n\tauthorizationButtons.forEach(function(button) {\r\n\t\tnew Button(button).insertBlock(button.element);\r\n\t});\r\n}","import './scss/init.scss';\r\nimport authorization from './pages/authorization';\r\nimport error from './pages/error';\r\n\r\nfunction ready() {\r\n\tauthorization();\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);"],"names":["$ea179994c2e62f0e$export$2e2bcd8739ae039","TEMPLATE_REGULAR","templateBlock","constructor","this","generateTemplate","template","changeTemplateKeys","tmp","templateRegular","templateKeys","exec","templateKey","key","templateValue","toString","replace","$520553f39a89de5b$export$5087227eb54526","listeners","on","event","callback","push","off","Error","filter","listener","emit","args","Event","forEach","$2f12cd551daa3e41$export$2e2bcd8739ae039","static","INIT","FLOW_CDM","FLOW_CDU","FLOW_RENDER","_element","tagName","eventBus","_meta","params","props","_makePropsProxy","_registerEvents","EVENTS","init","bind","_componentDidMount","_componentDidUpdate","_render","_createDocumentElement","_createResources","componentDidMount","oldProps","newProps","componentDidUpdate","oldPropsString","JSON","stringify","nextProps","Object","assign","element","block","render","console","log","innerHTML","self","Proxy","target","property","value","deleteProperty","document","createElement","getContent","style","display","clean","inner","wrapper","querySelector","childNodes","$c06e06c0e2a8e299$var$validationRegex","email","RegExp","login","name","phone","password","$c06e06c0e2a8e299$export$5ca26c99531348ec","input","validationType","getAttribute","errorText","regex","inputWrapper","parentElement","errorBlock","test","classList","add","textContent","remove","$160682af531b0660$export$2e2bcd8739ae039","super","insertedBlock","insertBlock","appendChild","form","formBlocks","querySelectorAll","infoBlock","isFormValid","repeatPassword","formBlock","contains","addEventListener","$56aaf2b78fa10785$export$2e2bcd8739ae039","onClick","textarea","$304d99fcbd5f2de6$export$2e2bcd8739ae039","$880dd279761bf785$export$2e2bcd8739ae039","$ef2bdb53c468de7b$var$errorBlock","title","$ef2bdb53c468de7b$var$errorButtons","id","classes","preventDefault","$9d66ae0e255a5bf1$export$2e2bcd8739ae039","$ef2bdb53c468de7b$export$2e2bcd8739ae039","errorButtons","button","$dfaf1c831bb1ea13$export$2e2bcd8739ae039","$3187ea00653b05f0$var$profileForm","$3187ea00653b05f0$var$profileImageInputs","imageLink","imageAlt","imageTitle","$3187ea00653b05f0$var$profileInputs","label","type","required","$3187ea00653b05f0$var$changePasswordButtons","showElement","getElementById","nextElementSibling","$3187ea00653b05f0$var$changePasswordInputs","$3187ea00653b05f0$var$profileButtons","$160682af531b0660$export$163d82ae5407ed7c","$02abb5fcca8ec534$export$2e2bcd8739ae039","$02abb5fcca8ec534$var$chatParams","chatUserName","$02abb5fcca8ec534$var$sendForm","$02abb5fcca8ec534$var$sendButton","$02abb5fcca8ec534$var$addFileButton","$02abb5fcca8ec534$var$chatProfileLinks","href","imageInput","$3b5868aba66e82f2$export$2e2bcd8739ae039","$02abb5fcca8ec534$var$chatList","photoLink","photoAlt","fromMeHideClass","text","time","newMessageHideClass","newMessageCount","$02abb5fcca8ec534$var$onChatClick","$02abb5fcca8ec534$var$messageList","toMeClass","$02abb5fcca8ec534$var$textareaParams","$02abb5fcca8ec534$var$deleteWarningMessage","MessageText","$02abb5fcca8ec534$var$deleteButtons","$2bf7bed257cd7c2d$export$2e2bcd8739ae039","message","$19124f774463db32$export$2e2bcd8739ae039","$1b9a869b90a3ae4b$export$2e2bcd8739ae039","link","chat","$07e628826b80842c$export$2e2bcd8739ae039","$21c29699499f144f$export$2e2bcd8739ae039","$fb81a59f87df34a9$var$registrationForm","$fb81a59f87df34a9$var$registrationInputs","$fb81a59f87df34a9$var$registrationButtons","$9d66ae0e255a5bf1$var$authorizationForm","$9d66ae0e255a5bf1$var$authorizationInputs","$9d66ae0e255a5bf1$var$authorizationButtons"],"version":3,"file":"index.25b998aa.js.map","sourceRoot":"../"}